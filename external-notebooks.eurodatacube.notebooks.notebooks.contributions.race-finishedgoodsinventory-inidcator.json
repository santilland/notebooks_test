{"version":1,"kind":"Notebook","sha256":"dab1cea70ecfe5cb1575e5c0ae02f9817f78af4c7985195ed56ece08d091d7aa","slug":"external-notebooks.eurodatacube.notebooks.notebooks.contributions.race-finishedgoodsinventory-inidcator","location":"/external_notebooks/eurodatacube/notebooks/notebooks/contributions/RACE_FinishedGoodsInventory_inidcator.ipynb","dependencies":[],"frontmatter":{"title":"Finished Goods Inventory indicator for RACE","content_includes_title":false,"kernelspec":{"name":"conda-env-users-edc-2023.10-01-py","display_name":"users-edc-2023.10-01","language":"python"},"github":"https://github.com/eoxhub-workspaces/documentation/","numbering":{"title":{"offset":5}},"edit_url":"https://github.com/eoxhub-workspaces/documentation//blob/main/external_notebooks/eurodatacube/notebooks/notebooks/contributions/RACE_FinishedGoodsInventory_inidcator.ipynb","exports":[{"format":"ipynb","filename":"RACE_FinishedGoodsInventory_inidcator.ipynb","url":"/notebooks_test/build/RACE_FinishedGoodsIn-997c90456b048725dee6c251ee1e028e.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Indicator E8 is calculated at the logistic areas operated at the production sites such as motor vehicle manufacturing, the large number of metal objects (e.g. machinery, vehicles) produces a strong signature in the radar backscatter signal. The observations are provided by the Synthetic Aperture Radar such as the C-band Copernicus Sentinel-1 satellites (source: ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BN4xpbxqo3"},{"type":"link","url":"https://race.esa.int/?indicator=E8&poi=DE5-E8&country=DE","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"RACE ESA","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fXXOYhm4XT"}],"urlSource":"https://race.esa.int/?indicator=E8&poi=DE5-E8&country=DE","key":"ttIpTwPTLv"},{"type":"text","value":")","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"awVfJSusKV"}],"key":"XeR1K6C7TG"}],"key":"hQImNfOEPl"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Importing needed modules","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RPITuQONE0"}],"identifier":"importing-needed-modules","label":"Importing needed modules","html_id":"importing-needed-modules","implicit":true,"key":"gKH5oZe1SR"}],"key":"ATsPefIS6c"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"#imports\n%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","visibility":"show","key":"oBz052YpFx"},{"type":"output","id":"4MWSYHEOuw1pWaBzlkGr-","data":[],"visibility":"show","key":"EGOWkqEoS6"}],"visibility":"show","key":"u6kv1CTwiG"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import datetime as dt\nimport os\n\nfrom matplotlib import mlab\nfrom shapely import geometry, wkt\n\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd \nfrom datetime import datetime\n\nfrom sentinelhub import (\n    CRS,\n    BBox,\n    DataCollection,\n    Geometry,\n    SentinelHubStatistical,\n    SentinelHubStatisticalDownloadClient,\n    SHConfig,\n    parse_time,\n    geometry,\n    SentinelHubCatalog,\n    bbox_to_dimensions,\n)","visibility":"show","key":"xGwqpKofB0"},{"type":"output","id":"FkM2Iobgz3TgT2oFg-eSp","data":[],"visibility":"show","key":"AD6NLDbETh"}],"visibility":"show","key":"nRGFGz7qsm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"SentinelHub account configuration","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"reloDizc6X"}],"identifier":"sentinelhub-account-configuration","label":"SentinelHub account configuration","html_id":"sentinelhub-account-configuration","implicit":true,"key":"NP5hDY3jlQ"}],"key":"sJQBfAMsF2"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"sh_client_id=\"\"\nsh_client_secret=\"\"\n\nif not sh_client_id:\n    sh_client_id = os.environ[\"SH_CLIENT_ID\"]\n\nif not sh_client_secret:\n    sh_client_secret = os.environ[\"SH_CLIENT_SECRET\"]\n\n\nif not sh_client_id or not sh_client_secret:\n    raise ValueError(\"No valid Sentinel HUB credentials are available. Plese contact system administrator.\")    \n    \nconfig = SHConfig()\n\nconfig.sh_client_id = sh_client_id\nconfig.sh_client_secret = sh_client_secret","visibility":"show","key":"uh0iwzWG78"},{"type":"output","id":"bPqlRja60RBXTP_3or8mC","data":[],"visibility":"show","key":"QOz5GIzLqn"}],"visibility":"show","key":"YUJ7OQ2jNx"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Input Parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"o6smInOvuD"}],"identifier":"input-parameters","label":"Input Parameters","html_id":"input-parameters","implicit":true,"key":"XNNS6fYnhA"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Volvo Cars, Ghent, Belgium","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"l6QvPvEmSN"}],"key":"gbboS5Mm9D"}],"key":"Wka3G4V3bf"},{"type":"block","kind":"notebook-code","data":{"tags":["parameters"]},"children":[{"type":"code","lang":"python","executable":true,"value":"aoi = \"POLYGON ((3.754824 51.096633, \\\n              3.753451 51.096242, \\\n              3.755747 51.093102, \\\n              3.755661 51.09511, \\\n              3.755211 51.094989, \\\n              3.754953 51.095393, \\\n              3.755211 51.09608, \\\n              3.755125 51.0967, \\\n              3.755447 51.097953, \\\n              3.755168 51.098048, \\\n              3.755009 51.097886, \\\n              3.754116 51.097697, \\\n              3.754824 51.096633))\"\n\ntime_period= \"2023-01-01/2023-05-31\"\n\nOUTPUT_DIR = \"\" # \"/home/E8/result-data/e8\" # will be copied to the local folder of the user requesting the data","visibility":"show","key":"eqMgpnhv3P"},{"type":"output","id":"G-GqLw25bJ55zXT8jw0Wf","data":[],"visibility":"show","key":"PPSv05sfz4"}],"visibility":"show","key":"I0SMJhcANs"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Parameter preparation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NOKW3beloc"}],"identifier":"parameter-preparation","label":"Parameter preparation","html_id":"parameter-preparation","implicit":true,"key":"QAlpTAyUYg"}],"key":"YASjjZ3LoP"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from_to = time_period.split(\"/\")\n\ninterval = (f'{from_to[0]}T00:00:00Z', f'{from_to[1]}T23:59:59Z')\nprint(f'interval: {interval}')\n\ngeometry = Geometry(aoi, crs=CRS.WGS84)\nprint(geometry)\n\nsize = bbox_to_dimensions(geometry.bbox, resolution=5)\nprint(f'size: {size}')\n\ncollection = DataCollection.SENTINEL1_IW\nprint(f'collection: {collection}')","visibility":"show","key":"iFBkUHYJMM"},{"type":"output","id":"OaqkZrlPhOlssXcza6sRZ","data":[{"name":"stdout","output_type":"stream","text":"interval: ('2023-01-01T00:00:00Z', '2023-05-31T23:59:59Z')\nGeometry(POLYGON ((3.754824 51.096633, 3.753451 51.096242, 3.755747 51.093102, 3.755661 51.09511, 3.755211 51.094989, 3.754953 51.095393, 3.755211 51.09608, 3.755125 51.0967, 3.755447 51.097953, 3.755168 51.098048, 3.755009 51.097886, 3.754116 51.097697, 3.754824 51.096633)), crs=CRS('4326'))\nsize: (31, 110)\ncollection: DataCollection.SENTINEL1_IW\n"}],"visibility":"show","key":"M6J5bmOhe0"}],"visibility":"show","key":"Fz8nTLFePQ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Evalscript definition","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iAgirzQem5"}],"identifier":"evalscript-definition","label":"Evalscript definition","html_id":"evalscript-definition","implicit":true,"key":"PAPLhAjD5w"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Evalscript to retreve the VH channel in linear units","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"MpAouew2du"}],"key":"yPPi74EPdW"}],"key":"D9sUQM47tR"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"#evalscript (linear units)\nevalscript = \"\"\"\n//VERSION=3\nfunction setup() {\n  return {\n    input: [{\n      bands: [\"VH\", \"dataMask\"]\n    }],\n    output: [\n      {\n        id: \"default\",\n        bands: 1\n      },\n      {\n        id: \"dataMask\",\n        bands: 1\n      }]\n  };\n}\n\nfunction evaluatePixel(samples) {\n    return {\n        default: [samples.VH],\n        dataMask: [samples.dataMask],\n    };\n}\n\n\"\"\"","visibility":"show","key":"gpAVAaOe5C"},{"type":"output","id":"i0sWxuPYX2hVErIF3Pa8e","data":[],"visibility":"show","key":"QyQeB0oS2L"}],"visibility":"show","key":"G9SHiO2MK6"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"SentinelHub statistical API request (linear units)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uHYuO3cSf5"}],"identifier":"sentinelhub-statistical-api-request-linear-units","label":"SentinelHub statistical API request (linear units)","html_id":"sentinelhub-statistical-api-request-linear-units","implicit":true,"key":"fokykVOqtA"}],"key":"kqmUidKDC9"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Definition of the SentinelHUB statistical API request (linear unit)\nrequest = SentinelHubStatistical(\n    aggregation=SentinelHubStatistical.aggregation(\n        evalscript=evalscript,\n        time_interval=interval,\n        aggregation_interval='P1D', \n        size=size\n    ),\n    input_data=[\n        SentinelHubStatistical.input_data(\n            collection,            \n            other_args={\"dataFilter\": {\"mosaickingOrder\": \"mostRecent\",\"resolution\": \"HIGH\"},\n                        \"processing\": {\"orthorectify\": \"True\",\"backCoeff\": \"GAMMA0_TERRAIN\",\"demInstance\": \"COPERNICUS\"}},            \n      ),\n    ],\n    geometry=geometry,\n    config=config\n)","visibility":"show","key":"aCElnfLmoC"},{"type":"output","id":"dN_JIDAkfOrJYPygazmfK","data":[],"visibility":"show","key":"GCqcv8Jr7I"}],"visibility":"show","key":"Tlfg0zPYz4"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# helper function\n\ndef stats_to_df(stats_data):\n    \"\"\"Transform Statistical API response into a pandas.DataFrame\"\"\"\n    df_data = []\n\n    for single_data in stats_data[\"data\"]:\n        df_entry = {}\n        is_valid_entry = True\n\n        df_entry[\"interval_from\"] = parse_time(single_data[\"interval\"][\"from\"]).date()\n        df_entry[\"interval_to\"] = parse_time(single_data[\"interval\"][\"to\"]).date()\n\n        for output_name, output_data in single_data[\"outputs\"].items():\n            for band_name, band_values in output_data[\"bands\"].items():\n\n                band_stats = band_values[\"stats\"]\n                if band_stats[\"sampleCount\"] == band_stats[\"noDataCount\"]:\n                    is_valid_entry = False\n                    break\n                band_name='gamma0'\n                for stat_name, value in band_stats.items():\n                    col_name = f\"{output_name}_{band_name}_{stat_name}\"\n                    if stat_name == \"percentiles\":\n                        for perc, perc_val in value.items():\n                            perc_col_name = f\"{col_name}_{perc}\"\n                            df_entry[perc_col_name] = perc_val\n                    else:\n                        df_entry[col_name] = value\n\n        if is_valid_entry:\n            df_data.append(df_entry)\n\n    return pd.DataFrame(df_data)","visibility":"show","key":"ol5x7UtvpV"},{"type":"output","id":"3rTjxJ0OzHuZ30TFSs9RZ","data":[],"visibility":"show","key":"UwPOdzrtIS"}],"visibility":"show","key":"kNQAxkCEWV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Execute statistical API call","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nu2ZpR5Hww"}],"identifier":"execute-statistical-api-call","label":"Execute statistical API call","html_id":"execute-statistical-api-call","implicit":true,"key":"CcN47a719Z"}],"key":"BoS4x37wYE"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n\nstats = request.get_data()[0]","visibility":"show","key":"T7DMwdYEeD"},{"type":"output","id":"z-wnpCIwHbpNiY6RXcxO_","data":[{"name":"stdout","output_type":"stream","text":"CPU times: user 31.3 ms, sys: 845 µs, total: 32.2 ms\nWall time: 14.2 s\n"}],"visibility":"show","key":"jfz32PZEB5"}],"visibility":"show","key":"K67dpO2ESV"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"stats","visibility":"show","key":"kQcfw0aW4O"},{"type":"output","id":"RTQ2mCvTofEFV38Fji9K0","data":[{"output_type":"execute_result","execution_count":10,"metadata":{},"data":{"text/plain":{"content":"{'data': [{'interval': {'from': '2023-01-02T00:00:00Z',\n    'to': '2023-01-03T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.16340191662311554,\n        'mean': 0.020170348369482456,\n        'stDev': 0.02285037853232081,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-01-11T00:00:00Z', 'to': '2023-01-12T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.00053760054288432,\n        'max': 0.24312031269073486,\n        'mean': 0.04211890462859845,\n        'stDev': 0.03629304551408707,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-01-14T00:00:00Z', 'to': '2023-01-15T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0006729860324412584,\n        'max': 0.19775378704071045,\n        'mean': 0.031004727582072285,\n        'stDev': 0.027735737674828637,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-01-23T00:00:00Z', 'to': '2023-01-24T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0009634400485083461,\n        'max': 0.2604427635669708,\n        'mean': 0.03710458156976975,\n        'stDev': 0.029410454599443258,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-01-26T00:00:00Z', 'to': '2023-01-27T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.19697800278663635,\n        'mean': 0.014065844342996327,\n        'stDev': 0.01787606018022531,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-02-04T00:00:00Z', 'to': '2023-02-05T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0001648256293265149,\n        'max': 0.2849183678627014,\n        'mean': 0.04403019187025702,\n        'stDev': 0.03847105105128533,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-02-07T00:00:00Z', 'to': '2023-02-08T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.29712384939193726,\n        'mean': 0.027096869942913476,\n        'stDev': 0.03569749071604884,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-02-16T00:00:00Z', 'to': '2023-02-17T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0004944409593008459,\n        'max': 0.3378330171108246,\n        'mean': 0.045825843527739,\n        'stDev': 0.04036756017746949,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-02-19T00:00:00Z', 'to': '2023-02-20T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.00041939294897019863,\n        'max': 0.2099660336971283,\n        'mean': 0.026614709247701176,\n        'stDev': 0.023548831183995127,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-02-28T00:00:00Z', 'to': '2023-03-01T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0006654243916273117,\n        'max': 0.3600568175315857,\n        'mean': 0.0472974813629821,\n        'stDev': 0.05489599699480876,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-03-03T00:00:00Z', 'to': '2023-03-04T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.29821091890335083,\n        'mean': 0.03507009017888996,\n        'stDev': 0.04387753379686625,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-03-12T00:00:00Z', 'to': '2023-03-13T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.4448762536048889,\n        'mean': 0.04779726558316226,\n        'stDev': 0.04985294556300964,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-03-15T00:00:00Z', 'to': '2023-03-16T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0008856073254719377,\n        'max': 0.37921154499053955,\n        'mean': 0.028712701657937077,\n        'stDev': 0.03471600123301487,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-03-24T00:00:00Z', 'to': '2023-03-25T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.23608514666557312,\n        'mean': 0.024316525484749146,\n        'stDev': 0.03256625124681898,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-03-27T00:00:00Z', 'to': '2023-03-28T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.23828335106372833,\n        'mean': 0.01775118947461046,\n        'stDev': 0.018320137795120178,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-04-05T00:00:00Z', 'to': '2023-04-06T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.45296838879585266,\n        'mean': 0.03900137496664967,\n        'stDev': 0.042024593994948636,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-04-08T00:00:00Z', 'to': '2023-04-09T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.2152615636587143,\n        'mean': 0.022333543447702216,\n        'stDev': 0.02620208028272066,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-04-17T00:00:00Z', 'to': '2023-04-18T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.002032041549682617,\n        'max': 0.5498997569084167,\n        'mean': 0.044835481837720105,\n        'stDev': 0.046012847991873454,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-04-20T00:00:00Z', 'to': '2023-04-21T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.16349147260189056,\n        'mean': 0.02873210011509262,\n        'stDev': 0.02393506299066644,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-04-29T00:00:00Z', 'to': '2023-04-30T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0006535442662425339,\n        'max': 0.47605401277542114,\n        'mean': 0.03541633574442838,\n        'stDev': 0.040027245107101476,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-05-02T00:00:00Z', 'to': '2023-05-03T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.17263391613960266,\n        'mean': 0.022400794911947564,\n        'stDev': 0.02089685718653454,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-05-11T00:00:00Z', 'to': '2023-05-12T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.00099738291464746,\n        'max': 0.5997887849807739,\n        'mean': 0.04238483271101902,\n        'stDev': 0.0496137676484485,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-05-14T00:00:00Z', 'to': '2023-05-15T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.1937440186738968,\n        'mean': 0.027808189490742666,\n        'stDev': 0.026702131403036893,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-05-23T00:00:00Z', 'to': '2023-05-24T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.00015107712533790618,\n        'max': 0.7867693305015564,\n        'mean': 0.03877178178659433,\n        'stDev': 0.049881851527115044,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}},\n  {'interval': {'from': '2023-05-26T00:00:00Z', 'to': '2023-05-27T00:00:00Z'},\n   'outputs': {'default': {'bands': {'B0': {'stats': {'min': 0.0,\n        'max': 0.13981038331985474,\n        'mean': 0.027745446994931356,\n        'stDev': 0.02302270492599983,\n        'sampleCount': 3410,\n        'noDataCount': 2014}}}}}}],\n 'status': 'OK'}","content_type":"text/plain"}}}],"visibility":"show","key":"GZkrbJKCq6"}],"visibility":"show","key":"JIToS44G1U"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert to Dataframe","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"d5fuCxcaIF"}],"identifier":"convert-to-dataframe","label":"Convert to Dataframe","html_id":"convert-to-dataframe","implicit":true,"key":"QoDy2c3Rkr"}],"key":"syKxqD37BU"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"#convert statistical data to pandas dataframe\ndf = stats_to_df(stats)\ndf=df[['interval_from','default_gamma0_mean']]\ndf.rename(columns = {'interval_from':'Acquisition date','default_gamma0_mean':'mean_gamma0'}, inplace = True)\ndf.head()","visibility":"show","key":"kQyokXxEDE"},{"type":"output","id":"Gwh1ytg_Or14XzTS4YfPk","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Acquisition date</th>\n      <th>mean_gamma0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2023-01-02</td>\n      <td>0.020170</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2023-01-11</td>\n      <td>0.042119</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2023-01-14</td>\n      <td>0.031005</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2023-01-23</td>\n      <td>0.037105</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2023-01-26</td>\n      <td>0.014066</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"  Acquisition date  mean_gamma0\n0       2023-01-02     0.020170\n1       2023-01-11     0.042119\n2       2023-01-14     0.031005\n3       2023-01-23     0.037105\n4       2023-01-26     0.014066","content_type":"text/plain"}}}],"visibility":"show","key":"y6rFABbs6D"}],"visibility":"show","key":"XSR1K5Imkd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Removing outliers","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WEMtKtc3zi"}],"identifier":"removing-outliers","label":"Removing outliers","html_id":"removing-outliers","implicit":true,"key":"oALoN06t74"}],"key":"LBDbyVJfTc"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def remove_and_interpolate_outliers(df):\n    import pandas as pd\n    import numpy as np\n    # Read stats file\n    \n    # create thresholds\n    min_threshold, max_threshold = df['mean_gamma0'].quantile([0.01,0.99])\n    \n    # create a new dataframe excluding the outlier rows\n    outlier_removed = df[(df['mean_gamma0'] < max_threshold)&(df['mean_gamma0'] > min_threshold)]\n    outliersId = df[(df['mean_gamma0'] >= max_threshold) | (df['mean_gamma0'] <= min_threshold)].index\n    \n    # diplay the shape of new dataset\n    print(outlier_removed.shape)\n    # the orignal shape \n    print(df.shape)\n    \n    df2=df.copy()\n    # fill with nans\n    df2.loc[outliersId,['mean_gamma0']]=np.nan\n    # interpolate nans\n    outlier_rem_interp = df2.interpolate(method='nearest',order=2)\n    return outlier_rem_interp","visibility":"show","key":"BlaAQkc74t"},{"type":"output","id":"pEwXkaoClKa8Vpit0d6kx","data":[],"visibility":"show","key":"DuHm21AwPM"}],"visibility":"show","key":"dGAp2FnKE1"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"df_filt=remove_and_interpolate_outliers(df)","visibility":"show","key":"sLmc734Y4N"},{"type":"output","id":"Ev-QyzzPjK2ViZDHVUxKX","data":[{"name":"stdout","output_type":"stream","text":"(23, 2)\n(25, 2)\n"}],"visibility":"show","key":"xolyRaPYNl"}],"visibility":"show","key":"PJCHIpVSth"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exporting results","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"evrFJUzGmt"}],"identifier":"exporting-results","label":"Exporting results","html_id":"exporting-results","implicit":true,"key":"mwzz5ZelNa"}],"key":"x71iqHqVb2"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"df.to_csv(os.path.join(OUTPUT_DIR,'average_gamma0_time_series.csv'),index=False)","visibility":"show","key":"h8htB7v2ZB"},{"type":"output","id":"GKPvzaOlfX6Gqf25Xedhd","data":[],"visibility":"show","key":"OV46RqRxnV"}],"visibility":"show","key":"TEb9k0VZxz"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt\nimport matplotlib\n\nfig = df_filt.plot(x='Acquisition date', figsize=(20, 10), fontsize=10).get_figure()\nplt.title('Time series of normalized radar backscatter [gamma0]')\nplt.ylabel('gamma0')\nfig.savefig(os.path.join(OUTPUT_DIR,'average_gamma0_time_series.pdf'))","visibility":"show","key":"H65MNKw2Xv"},{"type":"output","id":"ALdu-KAfgPqSX6eGCxM6M","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ea488bd6fa5092fcf92b95e6ee0d6b42","path":"/notebooks_test/build/ea488bd6fa5092fcf92b95e6ee0d6b42.png"},"text/plain":{"content":"<Figure size 2000x1000 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"DqTRocWxtw"}],"visibility":"show","key":"VQO4HwOBo6"}],"key":"VpEeaKAPM8"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"openEO Client Demo","url":"/external-notebooks/eurodatacube/notebooks/notebooks/contributions/openeo-client-demo","group":"Contributions"},"next":{"title":"Third Party Data Import - PlanetScope","url":"/external-notebooks/eurodatacube/notebooks/notebooks/contributions/third-party-planetscope","group":"Contributions"}}},"domain":"http://localhost:3000"}