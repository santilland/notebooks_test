{"version":1,"kind":"Notebook","sha256":"2b3bcc3f0d40343202689b731e6877b6e514a57400672a2e84aa23636007f751","slug":"external-notebooks.eurodatacube.notebooks.notebooks.contributions.igarss2022.igarss-22-no2-timeseries-analysis","location":"/external_notebooks/eurodatacube/notebooks/notebooks/contributions/IGARSS2022/IGARSS-22_NO2_timeseries_analysis.ipynb","dependencies":[],"frontmatter":{"title":"NO2 timeseries analysis","content_includes_title":false,"kernelspec":{"name":"conda-env-no2ts-full-py","display_name":"python3 (no2ts-full)","language":"python"},"github":"https://github.com/eoxhub-workspaces/documentation/","numbering":{"title":{"offset":5}},"edit_url":"https://github.com/eoxhub-workspaces/documentation//blob/main/external_notebooks/eurodatacube/notebooks/notebooks/contributions/IGARSS2022/IGARSS-22_NO2_timeseries_analysis.ipynb","exports":[{"format":"ipynb","filename":"IGARSS-22_NO2_timeseries_analysis.ipynb","url":"/notebooks_test/build/IGARSS-22_NO2_timese-bf817c58578760f3d8be65689dfa853c.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"NO2 time series analysis on EO Dashboard: ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PDL8EHjGzn"},{"type":"link","url":"https://www.eodashboard.org/story?id=air-pollution-us-india-china","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"https://​www​.eodashboard​.org​/story​?id​=​air​-pollution​-us​-india​-china","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"o2vwOIinJu"}],"urlSource":"https://www.eodashboard.org/story?id=air-pollution-us-india-china","key":"aK3J7SJpLj"}],"key":"Qm2IEQGORD"}],"key":"WWTUw1JSlU"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Introduction","key":"n4HoOjE5xJ"},{"type":"text","value":"\n","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BAjityQ3fK"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The air quality analysis focuses on monitoring tropospheric nitrogen dioxide (NO2) measured by the Tropospheric Monitoring Instrument (TROPOMI) aboard Copernicus Sentinel-5P.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ecn3od0SxO"}],"key":"UBvMQRlk5e"},{"type":"text","value":"\nEarth-observing satellites equipped with TROPOMI instrument are being used to map air pollution worldwide and have revealed a significant drop in nitrogen dioxide (NO2) concentrations – coinciding with the strict quarantine measures which cause less emissions of the air pollutant nitrogen dioxide due to reduced traffic and industrial activities.\nThe nitrogen dioxide concentrations vary from day to day due to changes in the weather (such as wind speed, cloudiness, etc) and conclusions cannot be drawn based on just one day of data alone. By combining data for a specific period of time (e.g. averaging over 14 days) the meteorological variability partially averages out and impact of changes due to human activity become more clearly visible.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"PjKJHqdviP"}],"key":"Mo6N3Ky11S"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Notebook Description","key":"ns5j81iUES"},{"type":"text","value":"\nThis notebook allows the user to compute and extract NO2 timeseries statistics over predefined AOIs.\nThe nomeclature of the files you see in the notebook are the one used to generate the indicator on the dashbaord. So they can be customized as desired. Nevertheless to produce a Dashboard compliant indicator the format of columns and other parameters need to be formatted as represented in the workflow.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"edIMvotCiN"}],"key":"Xwal4rN4uY"}],"key":"MBIsaslXw9"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"To collect information about TROPOMI NO2 and data provided please visit the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"kC98uLNqQg"},{"type":"link","url":"https://maps.s5p-pal.com/no2/","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"following link","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fjRW9qNQAQ"}],"urlSource":"https://maps.s5p-pal.com/no2/","key":"ki4eS39ABV"}],"key":"TzAkCYKeef"}],"key":"h9n3rEeA87"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Important Note","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H2jITLrYLQ"}],"identifier":"important-note","label":"Important Note","html_id":"important-note","implicit":true,"key":"hPIHDUxMC0"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In order to run this notebook specific libraries are necessary. These libraries are preinstalled as custom Conda Environments for the IGARSS-22 workshop. If you want to follow this tutorial in your private (local or EOxHub) workspace environment please follow the instructions ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BjfsfPWe7v"},{"type":"link","url":"https://eurodatacube.com/documentation/custom-jupyter-kernels","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"AIiCqPyUqz"}],"urlSource":"https://eurodatacube.com/documentation/custom-jupyter-kernels","key":"s1B9pQoxrU"},{"type":"text","value":". The yaml file with all dependencies and libraries to create the custom environment is provided below:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Bp3DJEzkX9"}],"key":"bR3T4geB3V"},{"type":"code","lang":"","value":"name: no2ts_full\nchannels:\n  - conda-forge\n  - defaults\ndependencies:\n  - _libgcc_mutex=0.1=main\n  - affine=2.3.0=py_0\n  - attrs=19.3.0=py_0\n  - backcall=0.2.0=pyh9f0ad1d_0\n  - backports=1.0=py_2\n  - backports.functools_lru_cache=1.6.4=pyhd8ed1ab_0\n  - blas=1.0=mkl\n  - bzip2=1.0.8=h7b6447c_0\n  - ca-certificates=2020.6.24=0\n  - cairo=1.14.12=h8948797_3\n  - certifi=2020.6.20=py37_0\n  - cfitsio=3.470=hb7c8383_2\n  - click=7.1.2=py_0\n  - click-plugins=1.1.1=py_0\n  - cligj=0.5.0=py37_0\n  - curl=7.67.0=hbc83047_0\n  - decorator=5.1.1=pyhd8ed1ab_0\n  - entrypoints=0.4=pyhd8ed1ab_0\n  - expat=2.2.9=he6710b0_2\n  - fontconfig=2.13.0=h9420a91_0\n  - freetype=2.10.2=h5ab3b9f_0\n  - freexl=1.0.5=h14c3975_0\n  - geos=3.8.0=he6710b0_0\n  - geotiff=1.5.1=h21e8280_1\n  - giflib=5.1.4=h14c3975_1\n  - glib=2.63.1=h5a9c865_0\n  - hdf4=4.2.13=h3ca952b_2\n  - hdf5=1.10.4=hb1b8bf9_0\n  - icu=58.2=he6710b0_3\n  - intel-openmp=2020.1=217\n  - ipykernel=5.3.4=py37h888b3d9_1\n  - ipython=7.18.1=py37hc6149b9_1\n  - ipython_genutils=0.2.0=py_1\n  - jedi=0.17.2=py37h89c1867_2\n  - jpeg=9b=h024ee3a_2\n  - json-c=0.13.1=h1bed415_0\n  - jupyter_client=7.1.2=pyhd8ed1ab_0\n  - jupyter_core=4.9.2=py37h89c1867_0\n  - kealib=1.4.7=hd0c454d_6\n  - krb5=1.16.4=h173b8e3_0\n  - ld_impl_linux-64=2.33.1=h53a641e_7\n  - libboost=1.67.0=h46d08c1_4\n  - libcurl=7.67.0=h20c2e04_0\n  - libdap4=3.19.1=h6ec2957_0\n  - libedit=3.1.20191231=h14c3975_1\n  - libffi=3.2.1=hd88cf55_4\n  - libgcc-ng=9.1.0=hdf63c60_0\n  - libgdal=3.0.2=h27ab9cc_0\n  - libgfortran-ng=7.3.0=hdf63c60_0\n  - libkml=1.3.0=h590aaf7_4\n  - libnetcdf=4.6.1=h11d0813_2\n  - libpng=1.6.37=hbc83047_0\n  - libpq=11.2=h20c2e04_0\n  - libsodium=1.0.18=h36c2ea0_1\n  - libspatialite=4.3.0a=h793db0d_0\n  - libssh2=1.9.0=h1ba5d50_1\n  - libstdcxx-ng=9.1.0=hdf63c60_0\n  - libtiff=4.1.0=h2733197_0\n  - libuuid=1.0.3=h1bed415_2\n  - libxcb=1.14=h7b6447c_0\n  - libxml2=2.9.10=he19cac6_1\n  - lz4-c=1.8.1.2=h14c3975_0\n  - mkl=2020.1=217\n  - mkl-service=2.3.0=py37he904b0f_0\n  - mkl_fft=1.1.0=py37h23d657b_0\n  - mkl_random=1.1.1=py37h0573a6f_0\n  - ncurses=6.2=he6710b0_1\n  - nest-asyncio=1.5.5=pyhd8ed1ab_0\n  - numpy=1.19.1=py37hbc911f0_0\n  - numpy-base=1.19.1=py37hfa32c7d_0\n  - openjpeg=2.3.0=h05c96fa_1\n  - openssl=1.1.1g=h7b6447c_0\n  - parso=0.7.1=pyh9f0ad1d_0\n  - pcre=8.44=he6710b0_0\n  - pexpect=4.8.0=pyh9f0ad1d_2\n  - pickleshare=0.7.5=py_1003\n  - pip=20.1.1=py37_1\n  - pixman=0.40.0=h7b6447c_0\n  - poppler=0.65.0=h581218d_1\n  - poppler-data=0.4.9=0\n  - postgresql=11.2=h20c2e04_0\n  - proj=6.2.1=haa6030c_0\n  - prompt-toolkit=3.0.29=pyha770c72_0\n  - ptyprocess=0.7.0=pyhd3deb0d_0\n  - pygments=2.11.2=pyhd8ed1ab_0\n  - pyparsing=2.4.7=py_0\n  - python=3.7.7=h191fe78_0_cpython\n  - python_abi=3.7=2_cp37m\n  - pyzmq=20.0.0=py37h5a562af_1\n  - rasterio=1.1.0=py37h41e4f33_0\n  - readline=7.0=h7b6447c_5\n  - setuptools=49.2.0=py37_0\n  - shapely=1.7.0=py37h98ec03d_0\n  - six=1.15.0=py_0\n  - snuggs=1.4.7=py_0\n  - sqlite=3.32.3=h62c20be_0\n  - tbb=2018.0.5=h6bb024c_0\n  - tiledb=1.6.3=h1fb8f14_0\n  - tk=8.6.10=hbc83047_0\n  - tornado=6.1=py37h4abf009_0\n  - traitlets=5.1.1=pyhd8ed1ab_0\n  - wcwidth=0.2.5=pyh9f0ad1d_2\n  - wheel=0.34.2=py37_0\n  - xerces-c=3.2.2=h780794e_0\n  - xz=5.2.5=h7b6447c_0\n  - zeromq=4.3.3=h58526e2_3\n  - zlib=1.2.11=h7b6447c_3\n  - zstd=1.3.7=h0b5b093_0\n  - pip:\n    - aenum==2.2.4\n    - boto3==1.14.36\n    - botocore==1.17.36\n    - chardet==3.0.4\n    - docutils==0.15.2\n    - idna==2.10\n    - jmespath==0.10.0\n    - oauthlib==3.1.0\n    - pandas==1.1.0\n    - pathlib==1.0.1\n    - pillow==7.2.0\n    - pyproj==2.6.1.post1\n    - python-dateutil==2.8.1\n    - pytz==2020.1\n    - requests==2.24.0\n    - requests-oauthlib==1.3.0\n    - s3transfer==0.3.3\n    - sentinelhub==3.0.5\n    - tifffile==2020.7.24\n    - urllib3==1.25.10\n    - utm==0.5.0\n    - wget==3.2\n    - xlrd==1.2.0","position":{"start":{"line":3,"column":1},"end":{"line":141,"column":1}},"key":"fvN2btSoQc"}],"key":"h34tvsGI9P"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Concept of analysis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jWlCcPk0h4"}],"identifier":"concept-of-analysis","label":"Concept of analysis","html_id":"concept-of-analysis","implicit":true,"key":"mCX3iCzkr3"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"As input data source a Bring Your Own COG - BYOC data collection (","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"TdyTS2fhHf"},{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"S5P-NO2-tropno-daily-check","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Af79G0LWyi"}],"key":"rB9YlhW1Zl"},{"type":"text","value":") is used that is composed by Tropospheric Nitrogen dioxide (NO2) global coverage maps, each of which is a spatial average of NO2 bi-weekly concentration value.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UwqAPvBgIY"}],"key":"eATuou6ium"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","children":[],"key":"VhctaW5H75"},{"type":"text","value":"SOURCE: ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Y93gU6LhlZ"},{"type":"link","url":"https://browser.eurodatacube.com/?zoom=10&lat=41.9&lng=12.5&collectionId=s5p-no2-tropno-daily-check&layerId=NO2&type=sentinel-hub-edc&fromTime=2021-05-19T08%3A45%3A36.153Z&toTime=2022-05-19T08%3A45%3A36.153Z","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"https://​browser​.eurodatacube​.com​/​?zoom​=​10​&​lat​=​41​.9​&​lng​=​12​.5​&​collectionId​=​s5p​-no2​-tropno​-daily​-check​&​layerId​=​NO2​&​type​=​sentinel​-hub​-edc​&​fromTime​=​2021​-05​-19T08​%3A45​%3A36​.153Z​&​toTime​=​2022​-05​-19T08​%3A45​%3A36​.153Z","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Gv9CAnBykX"}],"urlSource":"https://browser.eurodatacube.com/?zoom=10&lat=41.9&lng=12.5&collectionId=s5p-no2-tropno-daily-check&layerId=NO2&type=sentinel-hub-edc&fromTime=2021-05-19T08%3A45%3A36.153Z&toTime=2022-05-19T08%3A45%3A36.153Z","key":"wG4wCi629d"},{"type":"strong","children":[],"key":"YpjxtgI8vW"}],"key":"PMzkTZHZFI"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"The core of the notebook","key":"e5NOrD5dZE"},{"type":"text","value":" is then to compute median, std, max, min statistics on specific areas (AoI) and time range, and output this information on a csv that can be directly ingested in the geoDB and the related timeseries visualized on the EO Dashboard.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"lXhXiE3fx9"}],"key":"VTHpFIKt4Y"}],"key":"In7UNsdSqM"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Notebook step by step guide","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lHffUlKn1l"}],"identifier":"notebook-step-by-step-guide","label":"Notebook step by step guide","html_id":"notebook-step-by-step-guide","implicit":true,"key":"TidczxGzJe"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"As you can see the different cells execute different commands to allow the generation of the required files.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pIFd4hNEO2"}],"key":"P00mkkTunu"}],"key":"lE0J62b6JY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import Libraries","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qMSr3AbRzZ"}],"identifier":"import-libraries","label":"Import Libraries","html_id":"import-libraries","implicit":true,"key":"iEPYz1KfyN"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"this cell aim at importing the necessary libraries to run the notebook.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"kFs4bHyjqb"}],"key":"xWLFOXnLu0"}],"key":"J7RjVWMjTs"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Import packages\nimport itertools\nimport os\nimport numpy\nimport wget\nimport shapely\nimport rasterio\nimport datetime\nimport csv\nimport shutil\n\nfrom shapely import wkt\nfrom rasterio.merge import merge\nfrom rasterio.mask import mask\nfrom pathlib import Path\nfrom sentinelhub import MimeType, CRS, BBox, BBoxSplitter\nfrom sentinelhub.geometry import Geometry\nfrom sentinelhub.geo_utils import bbox_to_dimensions\nfrom shapely.geometry import shape, Polygon\n\nimport sys\nimport getopt\n\nimport time as tm\nimport urllib\nfrom urllib.error import HTTPError","key":"lB2RLRyR04"},{"type":"output","id":"9SOS7aEkRnUL5UAqxInWR","data":[],"key":"kHvzoUJhrS"}],"key":"rPbIg4dS92"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#!pip install matplotlib\nimport sys\n!{sys.executable} -m pip install matplotlib\nimport pandas as pd\nfrom matplotlib import pyplot as plt","key":"cdY7L4bRmb"},{"type":"output","id":"OZthjjke34lb8ap-y4mgx","data":[{"name":"stdout","output_type":"stream","text":"Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: matplotlib in ./.local/lib/python3.7/site-packages (3.5.2)\nRequirement already satisfied: pillow>=6.2.0 in /home/conda/environments/no2ts-full/lib/python3.7/site-packages (from matplotlib) (7.2.0)\nRequirement already satisfied: kiwisolver>=1.0.1 in ./.local/lib/python3.7/site-packages (from matplotlib) (1.4.3)\nRequirement already satisfied: cycler>=0.10 in ./.local/lib/python3.7/site-packages (from matplotlib) (0.11.0)\nRequirement already satisfied: fonttools>=4.22.0 in ./.local/lib/python3.7/site-packages (from matplotlib) (4.34.4)\nRequirement already satisfied: python-dateutil>=2.7 in /home/conda/environments/no2ts-full/lib/python3.7/site-packages (from matplotlib) (2.8.1)\nRequirement already satisfied: numpy>=1.17 in /home/conda/environments/no2ts-full/lib/python3.7/site-packages (from matplotlib) (1.19.1)\nRequirement already satisfied: pyparsing>=2.2.1 in /home/conda/environments/no2ts-full/lib/python3.7/site-packages (from matplotlib) (2.4.7)\nRequirement already satisfied: packaging>=20.0 in ./.local/lib/python3.7/site-packages (from matplotlib) (21.3)\nRequirement already satisfied: typing-extensions; python_version < \"3.8\" in ./.local/lib/python3.7/site-packages (from kiwisolver>=1.0.1->matplotlib) (4.3.0)\nRequirement already satisfied: six>=1.5 in /home/conda/environments/no2ts-full/lib/python3.7/site-packages (from python-dateutil>=2.7->matplotlib) (1.15.0)\n"}],"key":"mKLU4UxVF3"}],"key":"G8DHVdQQU7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Input Parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OsrZUY1xA8"}],"identifier":"input-parameters","label":"Input Parameters","html_id":"input-parameters","implicit":true,"key":"qPs7fZpjqD"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"in this cell the user shall enter the location of the input parameters and the files themselves:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UJqxcxIAgv"}],"key":"qAboNS9CAu"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Input-Output files","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"hKW4Xp73sT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"inputfile: indicate where the file is and which file to use as input","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nRWNnSHfxG"}],"key":"daTEKtcIwz"}],"key":"vDSNMaY5hw"}],"key":"F47ajM3BAS"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Output location:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"pbjckKsMzO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"filename: is the standar file name used to be ingested into the dashboard. It shall be a csv file with specific  columns and formats","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"N5sIr5QSIJ"}],"key":"pS25p0kYxx"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"cities_info: os.path.basename() method is used to get the base name in the specified path (inputfile)","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"FA5kJsNyZM"}],"key":"Msvy5T58Kc"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"INPUT_DIR_NAME: os.path.dirname()  method used to get the directory name from the specified path (inputfile)","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"wAwN9UpuZh"}],"key":"Wlapb4r6Kj"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"OUTPUT_FOLDER: to generate a dedicated folder where tos tore the outputs in case it doesn’t exist.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"dwHgcNoBHZ"}],"key":"in24Dy2kzk"}],"key":"p59rkdl2dY"}],"key":"aTEhlxoNfN"}],"key":"ZfMhTE0k8o"}],"key":"wNK31BM4cm"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Input-Output files\ninputfile = \"./Inputs/No2TestCase.xls\"\nmode='full'\n\nnow = datetime.datetime.now()\ncurrent_proctime = now.strftime(\"%Y%m%dT%H%M%S\")\n\n# Output location\nfilename= 'N1_trilateral_' + current_proctime + '.csv'\ncities_info=os.path.basename(inputfile)\nINPUT_DIR_NAME = os.path.dirname(inputfile)\n\nOUTPUT_FOLDER = f\"./Outputs/N1_tri/{current_proctime}/\"\nif not os.path.exists(OUTPUT_FOLDER):\n    os.makedirs(OUTPUT_FOLDER)\nPARENT_DATASET_DIR = OUTPUT_FOLDER","key":"nkPcp4A6Qv"},{"type":"output","id":"wc32ufKWIfJxhLpNH5QMM","data":[],"key":"PBdN6uVJpP"}],"key":"vnvel5vhC0"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Server instance","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ipA8YyoBJb"}],"identifier":"server-instance","label":"Server instance","html_id":"server-instance","implicit":true,"key":"EV3wGeKgE0"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The server and the instances needed to use the proper files. The collections is avaialbe in the SH.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"pehgPh7ga3"}],"key":"FeRtbquARq"}],"key":"ZPAesyOXo3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Server instance\nWMS_SERVER_URL = \"https://services.sentinel-hub.com/ogc/wms/\"\nINSTANCE_ID = \"c1f84418-3731-4b42-b92b-737c47d327a6\"\nLAYER_NAME = \"S5P-TW-WEEKLY-NEW\"","key":"BbuqXbTVkN"},{"type":"output","id":"_KNc4rDysio21lfMBqVoe","data":[],"key":"fyTRdTeHko"}],"key":"VdOMFqUgQR"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Parameters\nRES_X = 1627.315\nRES_Y = RES_X\nprint(RES_X)\n\nCRS_TARGET = \"WGS84\"\nIMAGE_DEPTH = \"32f\" # 8, 16, 32f (8bit uint, 16bit uint or 32bit float)\nIMAGE_FORMAT = \"tif\" # Only tif image is supported right now","key":"O4T06jWLkk"},{"type":"output","id":"w59x7P_nDetE7bH_VgX-o","data":[{"name":"stdout","output_type":"stream","text":"1627.315\n"}],"key":"HTdElagDAl"}],"key":"OKS121EZUu"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Defining text info to be printed in the output file\nregion=''\nsite=''\ndescription='Tropospheric Nitrogen dioxide (NO2) column accumulated in last 14 days'\ndescription='Air Quality'\nmethod='Spatial average of NO2 bi-weekly concentration value on the city area'\neosensor='TROPOMI'\ninput_data='Sentinel-5p Level-3 NO2'\nindicator_code='N1'\nref_description='Spatial statistics [median,std,max,min,percentage valid pixels] of the current date within the city area'\nref_time=''\nref_value=''\nrule=''\nindicator_value=''\nyaxis='Tropospheric NO2 (μmol/m2)'\n#yaxis='Tropospheric NO2 (\\N{GREEK SMALL LETTER MU}mol/m2)'\ncolor=''\nindicator_name='TROPOMI: Spatial average over the city area of bi-weekly tropospheric nitrogen dioxide (NO2) concentrations'\nprovider='EMSS'\n#AOI_ID=''\nupdate_freq='Bi-weekly'\n\nfieldnames = ['AOI','Country','Region','City','Site Name','Description','Method','EO Sensor','Input Data','Indicator code','Time','Measurement Value','Reference Description','Reference time','Reference value','Rule','Indicator Value','Sub-AOI','Y axis','Indicator Name','Color code','Data Provider','AOI_ID','Update Frequency']\n","key":"BSbuu0s7SL"},{"type":"output","id":"gpTHO38ayCwXfI-jhmRvr","data":[],"key":"PDY4ZeL3Qe"}],"key":"Zkj1A9UPwc"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Defining WMS downloader","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HPRcnp8ZbA"}],"identifier":"defining-wms-downloader","label":"Defining WMS downloader","html_id":"defining-wms-downloader","implicit":true,"key":"BWIeAz3QLc"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In order to execute the statistics the tiles shall be accessed and further processed. In order to do that through SH, you have to consider some of the limitations the WMS has set up. In particular:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fDvqibbra7"}],"key":"zJrcaBpwl7"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"WMS_MAXIMUM_DATA_SIZE: the Maximum data size in pixel that can be requested from server (= 2500 Pixels). The following script allow to access to the needed patches (2500x2500) and to merge them into one image afterwards.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MJSAbe0Jc6"}],"key":"tYeG7VnYIG"}],"key":"JCXltZygUS"}],"key":"T1CHUejLiX"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Defining WMS downloader\n\"\"\"## Downloader function definition\"\"\"\n\nWMS_MAXIMUM_DATA_SIZE = 2500 # Maximum data size in pixel that can be requested from server\nWMS_VERSION = \"1.1.1\"\n\ndef mergeImageFiles(filesList, outFileName):\n\n    images = list(map(lambda x: rasterio.open(x, 'r'), filesList))\n    merged, transform = merge(images)\n\n    with rasterio.open(outFileName,\n                       \"w\",\n                       driver='Gtiff',\n                       count=images[0].count,\n                       height=merged.shape[1],\n                       width=merged.shape[2],\n                       transform=transform,\n                       crs=images[0].crs,\n                       dtype=images[0].dtypes[0]) as dest:\n        dest.write(merged)\n\ndef crs_string_to_object(crs_string):\n    if crs_string == \"WGS84\":\n        return CRS.WGS84\n    else:\n        raise Exception(\"Unsupported CRS\")\n        \ndef image_format_string_to_object(image_ext_string, depth_string=None):\n    if image_ext_string == \"tif\":\n        if depth_string == \"8\":\n            return MimeType.TIFF_d8\n        elif depth_string == \"16\":\n            return MimeType.TIFF_d16\n        elif depth_string == \"32f\":\n            return MimeType.TIFF_d32f\n        else:\n            raise Exception(\"Unsupported image format\")\n    else:\n        raise Exception(\"Unsupported image format\")\n        \n\ndef wmsRequestData(wms_server_url, instanceID, aoi, layer_name, crs, image_format, resolution, start_date, end_date, output_folder, filename):\n    \n    # Only supports GeoTiff format\n    if not image_format.is_tiff_format:\n        raise Exception(\"Unsopported image format\")\n        \n    # Create output folder\n    os.makedirs(output_folder, exist_ok=True)\n    \n    image_name, image_ext = os.path.splitext(filename)\n    # Calculate bbox wrapper around geometry\n    geometry = Geometry(aoi, crs)\n    bbox_wrapper = geometry.bbox\n    \n    bbox_wrapper_dims = bbox_to_dimensions(bbox_wrapper, resolution)\n    # Calculate optimum grid to split area if area to download is greater than server size limit\n    x_grid = (bbox_wrapper_dims[0] // WMS_MAXIMUM_DATA_SIZE) + 1\n    y_grid = (bbox_wrapper_dims[1] // WMS_MAXIMUM_DATA_SIZE) + 1\n    \n    bbox_partition = bbox_wrapper.get_partition(num_x=x_grid, num_y=y_grid)\n\n    downloaded_file_list = []\n    for i, j in itertools.product(range(x_grid), range(y_grid)):\n        # Get bbox in the grid\n        bbox = bbox_partition[i][j]\n        # Assemble WMS request\n        wms_query = wms_server_url + instanceID + \"?\" + \"version=\" + WMS_VERSION + \"&service=WMS\" + \"&request=GetMap\" + \"&format=\" + image_format.get_string() + \"&crs=\" + crs.ogc_string() + \"&layers=\" + layer_name + \"&RESX=\" + str(resolution[0]) + \"m\" + \"&RESY=\" + str(resolution[1])+ \"m\" + \"&BBOX=\" + str(bbox) + \"&TIME=\" + start_date + \"/\" + end_date\n        #wms_query = wms_server_url + instanceID + \"?\" + \"version=\" + WMS_VERSION + \"&service=WMS\" + \"&request=GetMap\" + \"&format=\" + image_format.get_string() + \"&crs=\" + crs.ogc_string() + \"&layers=\" + layer_name + \"&WIDTH=\" + str(resolution[0]) + \"&HEIGHT=\" + str(resolution[1])+ \"&BBOX=\" + str(bbox) + \"&TIME=\" + start_date + \"/\" + end_date\n        patch_filename = image_name + \"_\" + str(i) + \"_\" + str(j) + image_ext\n        \n        print(wms_query)\n        # Download image patch\n        print(\"Downloading patch (%d, %d) ...\" %(i, j))\n        wget.download(wms_query, out=os.path.join(output_folder, patch_filename))\n        downloaded_file_list.append(os.path.join(output_folder, patch_filename))\n            \n    # Merge images\n    print(\"Merging patches ...\")\n    mergeImageFiles(downloaded_file_list, os.path.join(output_folder, filename))\n    print(\"Done!!!\")\n    \n    # Remove image patches\n    for file in downloaded_file_list:\n        os.remove(file)\n        \ndef mask_raster(raster_file, aoi, output_file):\n    with rasterio.open(raster_file) as src:\n        if isinstance(aoi, shapely.geometry.MultiPolygon):\n            polygons = [polygon for polygon in aoi]\n        else:\n            polygons = [aoi]\n        out_image, out_transform = mask(src, polygons, crop=False)\n        out_meta = src.meta\n        \n        out_meta.update({\"driver\": \"GTiff\",\n                     \"height\": out_image.shape[1],\n                     \"width\": out_image.shape[2],\n                     \"transform\": out_transform})\n\n        with rasterio.open(output_file, \"w\", **out_meta) as dest:\n            dest.write(out_image)","key":"PQPitybPem"},{"type":"output","id":"7ObPuItJgzQTua-X2WQYq","data":[],"key":"Xh9YmT1Ggb"}],"key":"qmjLuynP3p"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Location parameters reading function","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sDqBTs74xz"}],"identifier":"location-parameters-reading-function","label":"Location parameters reading function","html_id":"location-parameters-reading-function","implicit":true,"key":"Iba1mSuUmr"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"the following cells aim at providing the functions to locate and re-call the parameters needed to run the core of the script for extracting the NO2 timeseries","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rbYdFLH8Tq"}],"key":"Fknf5ZgbNy"}],"key":"nXXrJZAZzK"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Reading function for reading location parameters\n\ndef read_input_pandas(filename):\n    import pandas as pd\n#    df = pd.read_csv(filename, header=1)\n    df = pd.read_excel(filename,'cities')\n    print(df.head(5))\n    city=numpy.array(df.loc[:, 'City'])\n    country=numpy.array(df.loc[:,'Country'])\n    POINTS=numpy.array(df.loc[:,'Point Coordinates [LAT,LON]'])\n    DELTAS_X=numpy.array(df.loc[:,'DELTA_X'])\n    DELTAS_Y=numpy.array(df.loc[:,'DELTA_Y'])\n    AOI_ID=numpy.array(df.loc[:,'AOI_ID'])\n    POLYGONS=numpy.array(df.loc[:,'POLYGON'])\n    print(city)\n    print(POINTS)\n    print(DELTAS_X)\n    print(AOI_ID)\n    print(POLYGONS)\n    return city, country, DELTAS_X, DELTAS_X, AOI_ID, POINTS, POLYGONS","key":"VIThd2QXTV"},{"type":"output","id":"qTjuYiuQI59FxPwvzcEHP","data":[],"key":"kFPkHnCYX7"}],"key":"FaJaI2o4iV"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Resampling raster needed only when EDC does not allow to get data in full resolution\nimport os\nimport rasterio\n\nfrom rasterio.enums import Resampling\n\ndef resample_raster(raster_file, scale_factor, output_folder, output_filename):\n    os.makedirs(output_folder, exist_ok=True)\n    \n    input_raster_name, input_raster_ext = os.path.splitext(os.path.basename(raster_file))\n    \n    with rasterio.open(raster_file) as src:\n                \n        # resample data to target shape\n        data = src.read(\n            out_shape=(\n                src.count,\n                int(src.height * scale_factor),\n                int(src.width * scale_factor)\n            ),\n            resampling=Resampling.nearest\n        )\n\n        # scale image transform\n        out_transform = src.transform * src.transform.scale(\n            (src.width / data.shape[-1]),\n            (src.height / data.shape[-2])\n        )\n        \n        out_meta = src.meta.copy()\n        out_meta.update({\"height\": data.shape[1],\n                         \"width\": data.shape[2],\n                         \"transform\": out_transform})\n        with rasterio.open(os.path.join(output_folder, output_filename), \"w\", **out_meta) as dest:\n            dest.write(data)","key":"pvAA8RMD5C"},{"type":"output","id":"5EnRoIX9c697efHKipWMD","data":[],"key":"svJ7TT1zqz"}],"key":"OcnPQX4rX1"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Utility functions\n\n# Creating empty file with header\ndef creating_output_csv(filename):\n    with open(filename,'w') as csv_file:\n        fieldnames = ['AOI','Country','Region','City','Site Name','Description','Method','EO Sensor','Input Data','Indicator code','Time','Measurement Value','Reference Description','Reference time','Reference value','Rule','Indicator Value','Sub-AOI','Y axis','Indicator Name','Color Code','Data Provider','AOI_ID','Update Frequency']\n        writer = csv.DictWriter(csv_file, fieldnames=fieldnames)\n        writer.writeheader()\n        csv_file.close()\n        \n# Removing rows with dates compressing last 30 days\ndef removing_lines_csv(filename):\n    from datetime import date\n    import pandas as pd\n    fieldnames = ['AOI','Country','Region','City','Site Name','Description','Method','EO Sensor','Input Data','Indicator code','Time','Measurement Value','Reference Description','Reference time','Reference value','Rule','Indicator Value','Sub-AOI','Y axis','Indicator Name','Color Code','Data Provider','AOI_ID','Update Frequency']\n    #with open(filename,'a') as csv_file:\n    no2_df = pd.read_csv(filename)\n    print('Full N1 indicator file')\n    print(no2_df)\n    print(no2_df.Time.unique())\n    print(no2_df.Time.unique()[-1])\n    print(no2_df.Time.unique()[-2]) \n    start_date=no2_df.Time.unique()[-2]\n    no2_df.loc[(no2_df['Time'] == no2_df.Time.unique()[-2]) & (no2_df['Time'] == no2_df.Time.unique()[-1])]\n    print('Lines to overwrite')\n    print(no2_df.loc[(no2_df['Time'] == no2_df.Time.unique()[-2]) & (no2_df['Time'] == no2_df.Time.unique()[-1])])\n    print('Remaining lines')\n    print(no2_df.loc[(no2_df['Time'] != no2_df.Time.unique()[-2]) & (no2_df['Time'] != no2_df.Time.unique()[-1])]) \n    #no2_df.drop(no2_df.loc[(no2_df['Time'] >= no2_df.Time.unique()[-2]) & (no2_df['Time'] <= no2_df.Time.unique()[-1])])\n        #csv_file.close()\n    updated_df=no2_df.loc[(no2_df['Time'] != no2_df.Time.unique()[-2]) & (no2_df['Time'] != no2_df.Time.unique()[-1])]\n    updated_df['Measurement Value']=numpy.round(updated_df['Measurement Value'],6)\n    updated_df.to_csv(filename,columns=fieldnames, index = False)\n    updated_df.to_csv(filename+'.2',columns=fieldnames,index = False)\n    start=start_date.split('T')[0]\n    #start_date = datetime.strptime(start,'%Y-%m-%d')\n    start_date = date.fromisoformat(start)\n    #datetime.date(2019, 12, 4)\n    return start_date","key":"FXpbELepyi"},{"type":"output","id":"mm-wNf5Pe4XBAdZEMzRTl","data":[],"key":"Qul4ToTZdC"}],"key":"dJFjy1PvtO"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Core of the script","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bTNyv4VKhZ"}],"identifier":"core-of-the-script","label":"Core of the script","html_id":"core-of-the-script","implicit":true,"key":"evHpVMB3HJ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"The core then allow to run the script and and compute the statistics needed (min, max, median, std) .\nIn particular there are two modes you can used based on the purpose of the run. At the beginning of the project there was the need to update only records that changed over time, also on already executed period, because the source (S5P Pal) could provided nrt data and consolidated data). Then in order to be always updated with the consolidated data, it has been decided to run the script for the entire period and not only on updated values. For this reason the two modes represents exactly one of the two situations described:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"h3cCefb81S"}],"key":"XhHulD2eEL"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"full: execute the script for the entire period NO2 maps are avaialbe as it was done from scratch","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JrFaaxgxVG"}],"key":"JurIiloMQD"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"update: execute the scripts and update only the records that have been updated.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Pia4sd093m"}],"key":"KAJZ81nkZ5"}],"key":"tHbyNmqzD5"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"It is recommended to use the “full” mode.\nIn order to have clear how the output csv shall be formatted in terms of column, you can refer to the:","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"PbQQSSTXxM"}],"key":"ce1wS3AXUU"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"fieldnames parameter","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"F1q0Trtcui"}],"key":"t3x8sI2ySN"}],"key":"uJlVWTZBrl"}],"key":"I3q40HQkGb"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"## Core of the script\n\nimport os\nimport shapely\nfrom shapely import wkt\nimport datetime\nimport csv\nimport requests\n\n##############################################################\n# Download input file\nif not os.path.exists(os.path.join(INPUT_DIR_NAME,cities_info)):\n    url = 'https://github.com/eurodatacube/notebooks/blob/master/notebooks/contributions/IGARSS2022/No2TestCase.xls?raw=true'\n    r = requests.get(url, allow_redirects=True)\n    os.makedirs(INPUT_DIR_NAME, exist_ok=True)\n    open(os.path.join(INPUT_DIR_NAME,cities_info), 'wb').write(r.content)\n\n# Getting location parameters \ncity, country, DELTAS_X, DELTAS_Y, AOI_ID, POINTS, POLYGONS = read_input_pandas(os.path.join(INPUT_DIR_NAME,cities_info))\n\n# Defining time variables for looping\ndelta = datetime.timedelta(days=14) \ntoday = datetime.date.today()  \nend_date = today.strftime(\"%Y-%m-%d\")\n\n# Creating back up file\nif  os.path.isfile(os.path.join(PARENT_DATASET_DIR,filename)) and os.path.exists(os.path.join(PARENT_DATASET_DIR,filename)):\n    shutil.copy(os.path.join(PARENT_DATASET_DIR,filename),os.path.join(PARENT_DATASET_DIR,filename+'.bkp-'+end_date))\n\nif mode == 'full':\n    creating_output_csv(os.path.join(PARENT_DATASET_DIR,filename))\n    start = datetime.date(2022,1,10)\n    start = datetime.date(2021,1,4)\nelif mode == 'update':  \n    #delta1 = datetime.timedelta(days=30)\n    #start_date =today-delta1\n    start=removing_lines_csv(os.path.join(PARENT_DATASET_DIR,filename))\n    print(start)\n\n#end_date = today.strftime(\"%Y-%m-%d\")\nprint(end_date)\nend_date = today \n\n#initiating no2 average value to empty\nmean_value=[]\ndates=[]\nprint(len(city))\n#start=datetime.date(2020,6,8)\n#end_date=datetime.date(2020,6,23)\nfor k in range(0,len(city)):\n  print('###############################')\n  print('City:'+city[k])\n  start_date=start\n  DELTA_X=DELTAS_X[k]\n  DELTA_Y=DELTAS_Y[k]\n  LON=float(POINTS[k].split(',')[0])\n  LAT=float(POINTS[k].split(',')[1])\n  POINT=[LON, LAT]\n  print(str(POINT[0])+','+str(POINT[1]))\n  AOI = \"POLYGON((\"+str(POINT[1]-DELTA_X)+\" \"+str(POINT[0]-DELTA_Y)+\",\"+str(POINT[1]+DELTA_X)+\" \"+str(POINT[0]-DELTA_Y)+\",\"+str(POINT[1]+DELTA_X)+\" \"+str(POINT[0]+DELTA_Y)+\",\"+str(POINT[1]-DELTA_X)+\" \"+str(POINT[0]+DELTA_Y)+\",\"+str(POINT[1]-DELTA_X)+\" \"+str(POINT[0]-DELTA_Y)+\"))\"\n  print(AOI)\n  AOI=POLYGONS[k]\n  print(AOI)\n  cityname = city[k]\n  cityname=cityname.replace(\" \", \"\")\n  print(cityname)\n  IMAGE_REF_NAME=cityname+\"_S5p_L3_NO2\"\n  \n  # Read AOI and convert to shapely format\n  aoi = shapely.wkt.loads(AOI)\n  AOIstr=str(POINT[0])+'_'+str(POINT[1])\n  mean_value=[]\n  #end_date = datetime.date(2020, 6, 9)\n  #start_date = datetime.date(2020, 6, 8) \n  print('start',start_date)\n  print('stop',end_date)\n  while start_date +delta  <= end_date:\n    print(start_date)\n    START_DATE = start_date.strftime(\"%Y-%m-%d\")\n    #END_DATE=START_DATE\n    #date2= start_date+delta\n    #END_DATE= date2.strtime(\"%Y-%m-%d\")\n    END_DATE=START_DATE\n    \n    #dates=numpy.append(dates,START_DATE)\n\n    IMAGE_NAME = IMAGE_REF_NAME + \"_\" + START_DATE.translate({ord(i): None for i in '-:'}) + \"_\" + END_DATE.translate({ord(i): None for i in '-:'})\n    IMAGE_NAME_TIF = IMAGE_NAME + '.tif'\n    IMAGE_TIF = os.path.join(OUTPUT_FOLDER, IMAGE_NAME_TIF)\n    IMAGE_CLIPPED_NAME = IMAGE_NAME + \"_clipped\"\n    IMAGE_CLIPPED_NAME_TIF = IMAGE_NAME + \"_clipped\" + \".tif\"\n    IMAGE_CLIPPED_TIF = os.path.join(OUTPUT_FOLDER, IMAGE_CLIPPED_NAME_TIF)\n    try:\n        wmsRequestData(WMS_SERVER_URL, INSTANCE_ID, aoi, LAYER_NAME, crs_string_to_object(CRS_TARGET), image_format_string_to_object(IMAGE_FORMAT, IMAGE_DEPTH), (RES_X, RES_Y), START_DATE, END_DATE, OUTPUT_FOLDER, IMAGE_NAME_TIF)\n    except HTTPError as err:\n        print('Server sent error code {}.'.format(err.code))\n        print('\\nRetrying...')\n        tm.sleep(10)\n        continue\n\n    ## there is no need to resample as sinergise updated the WMS server to admit our request\n    # Downsampling of the WMS images downloaded at 1000m to 5500m original resolution\n    # resample_raster(OUTPUT_FOLDER+'/'+IMAGE_NAME_TIF, 1000/1627.315, OUTPUT_FOLDER, IMAGE_NAME_TIF)\n\n    with rasterio.open(OUTPUT_FOLDER+'/'+IMAGE_NAME_TIF) as no2:\n      band=no2.read(1)\n      #weight=no2.read(3)\n      band = numpy.where(band > 2000, numpy.NaN, band)\n      print('Mininum')\n      print(numpy.nanmin(band))\n      band = numpy.where(band < 0,numpy.NaN, band)\n      print('Mininum2')\n      print(numpy.nanmin(band))\n      nonnans = numpy.count_nonzero(~numpy.isnan(band))\n      perc = numpy.count_nonzero(~numpy.isnan(band))/numpy.shape(band)[0]/numpy.shape(band)[1]*100\n      #perc = numpy.where(perc>100.0,100.0,perc)\n      print('Nonperc:'+str(perc))\n\n      ## weighting band with normalised weigth band (outside pols max=14)\n      #band=numpy.multiply(band,weight/14.0)\n\n      new_value=numpy.nanmean(numpy.nanmean(band))\n      max=numpy.nanmax(numpy.nanmax(band))\n      min=numpy.nanmin(numpy.nanmin(band))\n      std=numpy.nanstd(band)\n      median=numpy.nanmedian(numpy.nanmedian(band))\n     # weightmean=numpy.mean(numpy.mean(weight))#/14\n      print('Values are')\n      value, count = numpy.unique(band.flatten(), return_counts = True, axis = 0)\n      print('max: '+str(max)+' min: '+str(min)+' median: '+str(median)+' mean:'+str(new_value)+' std:'+str(std)+' count: '+str(count[0]))#+' weigth_average:'+str(weightmean))\n      mean_value=numpy.append(mean_value,new_value)\n    measurement=str(numpy.round(new_value,6))\n    ref_value=[median,std,max,min,perc]#,weightmean]\n    \n    # Removing downloaded tif (no need to keep them)\n    os.remove(IMAGE_TIF)    \n    time=START_DATE+'T00:00:00'\n    subAOI=AOI\n #   ref_value=[median,std,max,min]\n#    ref_value.append(perc)\n    ref_time=time\n    line=str(POINT[0])+' '+str(POINT[1])+','+country[k]+','+region+','+city[k]+','+site+','+description+','+method+','+eosensor+','+input_data+','+indicator_code+','+time+','+str(measurement)+','+ref_description+','+ref_time+','+str(ref_value)+','+rule+','+indicator_value+','+subAOI+','+yaxis+','+indicator_name+','+color+','+provider+','+AOI_ID[k]+','+update_freq+'\\n'\n    \n    fieldnames = ['AOI','Country','Region','City','Site Name','Description','Method','EO Sensor','Input Data','Indicator code','Time','Measurement Value','Reference Description','Reference time','Reference value','Rule','Indicator Value','Sub-AOI','Y axis','Indicator Name','Color Code','Data Provider','AOI_ID','Update Frequency']\n    with open(os.path.join(PARENT_DATASET_DIR,filename), mode='a') as csv_file:\n      writer = csv.DictWriter(csv_file, fieldnames=fieldnames)\n      #if numpy.array_equal(ref_value,numpy.asarray([numpy.NaN,numpy.NaN,numpy.NaN,numpy.NaN,0.0])):\n      if str(ref_value) == '[nan, nan, nan, nan, 0.0]':#, 0.0]':\n        ref_value = 'NaN'\n        measurement = 'NaN'\n        print('NaN conditions verified')\n      if time == '2019-03-18T00:00:00' and city[k] == 'Paris':\n        ref_value = [179.6195, 49.52065, 286.7863, 90.32629, 100.0]#, 13.375]\n        measurement = 180.275910\n        print('Paris 20190318 condition verified')\n      writer.writerow({'AOI':str(POINT[0])+','+str(POINT[1]),'Country':country[k],'Region':region,'City':city[k],'Site Name':site,'Description':description,'Method':method,'EO Sensor':eosensor,'Input Data':input_data,'Indicator code':indicator_code,'Time':time,'Measurement Value':str(measurement),'Reference Description':ref_description,'Reference time':ref_time,'Reference value':str(ref_value),'Rule':rule,'Indicator Value':indicator_value,'Sub-AOI':AOI,'Y axis':yaxis,'Indicator Name':indicator_name,'Color Code':color,'Data Provider':provider,'AOI_ID':AOI_ID[k],'Update Frequency':update_freq})\n      csv_file.close()\n \n    #go to next iteration\n    start_date += delta\n \n  # Sorting the final file by time and city\n  with open(os.path.join(PARENT_DATASET_DIR,filename),newline='') as csvfile:\n    spamreader = csv.DictReader(csvfile, delimiter=\",\")\n#    sortedlist = sorted(spamreader, key=lambda row:(row['Time'],row['City']), reverse=False)\n    sortedlist = sorted(spamreader, key=lambda row:(row['Time'],row['City']), reverse=False)\n  with open(os.path.join(PARENT_DATASET_DIR,filename), 'w') as f:\n    writer = csv.DictWriter(f, fieldnames=fieldnames)\n    writer.writeheader()\n    for row in sortedlist:\n        writer.writerow(row)    \n  #print(mean_value)\n  #numpy.savetxt(PARENT_DATASET_DIR+'/'+IMAGE_REF_NAME+\".csv\", mean_value, delimiter=\",\")\n ","key":"z6LryIM5JB"},{"type":"output","id":"V0TX0ASr4YtcWgjqVG7ow","data":[{"name":"stdout","output_type":"stream","text":"            City Point Coordinates [LAT,LON] Country  DELTA_X  DELTA_Y AOI_ID  \\\n0      New Delhi         28.644800,77.216721      IN      0.3     0.23   IN01   \n1         Mumbai              19.076,72.8777      IN      0.3     0.23   IN02   \n2      Singapore         1.358235,103.812292    MY        0.3     0.23   MY01   \n3  Kuala Lumpur          3.144667,101.683885    MY        0.3     0.23   MY02   \n\n   WIDTH    HEIGHT  PIXELSIZE  WIDTH_f  HEIGHT_f  \\\n0     10  7.666667       0.06       10         8   \n1     10  7.666667       0.06       10         8   \n2     10  7.666667       0.06       10         8   \n3     10  7.666667       0.06       10         8   \n\n                                             POLYGON  \n0  POLYGON((76.986721 28.4148,77.44672100000001 2...  \n1  POLYGON((72.57770000000001 18.776,73.1777 18.7...  \n2  POLYGON((103.82756989258134 1.379403761756964,...  \n3  POLYGON((101.62000458496415 3.1957726933844097...  \n['New Delhi' 'Mumbai' 'Singapore' 'Kuala Lumpur ']\n['28.644800,77.216721' '19.076,72.8777' '1.358235,103.812292'\n '3.144667,101.683885']\n[0.3 0.3 0.3 0.3]\n['IN01' 'IN02' 'MY01' 'MY02']\n['POLYGON((76.986721 28.4148,77.44672100000001 28.4148,77.44672100000001 28.8748,76.986721 28.8748,76.986721 28.4148))'\n 'POLYGON((72.57770000000001 18.776,73.1777 18.776,73.1777 19.376,72.57770000000001 19.376,72.57770000000001 18.776))'\n 'POLYGON((103.82756989258134 1.379403761756964,103.91958039062821 1.379403761756964,103.91958039062821 1.3011475955753282,103.82756989258134 1.3011475955753282,103.82756989258134 1.379403761756964))'\n 'POLYGON((101.62000458496415 3.1957726933844097,101.7381076123079 3.1957726933844097,101.7381076123079 3.080589254797187,101.62000458496415 3.080589254797187,101.62000458496415 3.1957726933844097))']\n2022-07-18\n4\n###############################\nCity:New Delhi\n28.6448,77.216721\nPOLYGON((76.91672100000001 28.3448,77.516721 28.3448,77.516721 28.9448,76.91672100000001 28.9448,76.91672100000001 28.3448))\nPOLYGON((76.986721 28.4148,77.44672100000001 28.4148,77.44672100000001 28.8748,76.986721 28.8748,76.986721 28.4148))\nNewDelhi\nstart 2021-01-04\nstop 2022-07-18\n2021-01-04\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-01-04/2021-01-04\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n76.29955\nMininum2\n76.29955\nNonperc:100.0\nValues are\nmax: 500.8177 min: 76.29955 median: 219.4182 mean:238.19249 std:106.50223 count: 2\n2021-01-18\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-01-18/2021-01-18\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n67.982155\nMininum2\n67.982155\nNonperc:100.0\nValues are\nmax: 376.39294 min: 67.982155 median: 184.2216 mean:189.75691 std:76.56186 count: 4\n2021-02-01\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-02-01/2021-02-01\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n98.25004\nMininum2\n98.25004\nNonperc:100.0\nValues are\nmax: 589.13885 min: 98.25004 median: 244.66934 mean:270.12766 std:118.26879 count: 2\n2021-02-15\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-02-15/2021-02-15\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n58.273956\nMininum2\n58.273956\nNonperc:100.0\nValues are\nmax: 327.84024 min: 58.273956 median: 165.07184 mean:174.82004 std:71.1652 count: 4\n2021-03-01\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-03-01/2021-03-01\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n44.16578\nMininum2\n44.16578\nNonperc:100.0\nValues are\nmax: 225.60468 min: 44.16578 median: 121.53287 mean:125.030235 std:40.555546 count: 2\n2021-03-15\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-03-15/2021-03-15\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n39.361015\nMininum2\n39.361015\nNonperc:100.0\nValues are\nmax: 232.3768 min: 39.361015 median: 93.51888 mean:106.643326 std:46.403214 count: 4\n2021-03-29\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-03-29/2021-03-29\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n46.974144\nMininum2\n46.974144\nNonperc:100.0\nValues are\nmax: 149.07555 min: 46.974144 median: 91.96504 mean:92.39255 std:28.59559 count: 1\n2021-04-12\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-04-12/2021-04-12\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n51.09186\nMininum2\n51.09186\nNonperc:100.0\nValues are\nmax: 118.72666 min: 51.09186 median: 80.38575 mean:80.8655 std:15.792459 count: 2\n2021-04-26\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-04-26/2021-04-26\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n65.233986\nMininum2\n65.233986\nNonperc:100.0\nValues are\nmax: 120.68652 min: 65.233986 median: 87.24647 mean:88.17682 std:11.806984 count: 2\n2021-05-10\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-05-10/2021-05-10\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n23.917433\nMininum2\n23.917433\nNonperc:100.0\nValues are\nmax: 78.53326 min: 23.917433 median: 58.174416 mean:56.841465 std:11.197947 count: 1\n2021-05-24\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-05-24/2021-05-24\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n52.00285\nMininum2\n52.00285\nNonperc:100.0\nValues are\nmax: 97.9119 min: 52.00285 median: 72.95407 mean:73.86261 std:9.897431 count: 1\n2021-06-07\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-06-07/2021-06-07\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n51.73441\nMininum2\n51.73441\nNonperc:100.0\nValues are\nmax: 122.93893 min: 51.73441 median: 79.5505 mean:81.21956 std:16.764755 count: 2\n2021-06-21\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-06-21/2021-06-21\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n50.486267\nMininum2\n50.486267\nNonperc:100.0\nValues are\nmax: 144.46815 min: 50.486267 median: 96.77272 mean:95.81569 std:25.664936 count: 1\n2021-07-05\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-07-05/2021-07-05\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n41.393566\nMininum2\n41.393566\nNonperc:100.0\nValues are\nmax: 165.46799 min: 41.393566 median: 91.726616 mean:92.73539 std:27.187895 count: 2\n2021-07-19\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-07-19/2021-07-19\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n23.517561\nMininum2\n23.517561\nNonperc:95.85253456221199\nValues are\nmax: 106.06692 min: 23.517561 median: 61.43814 mean:61.373623 std:15.890952 count: 2\n2021-08-02\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-08-02/2021-08-02\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n29.69469\nMininum2\n29.69469\nNonperc:100.0\nValues are\nmax: 107.91709 min: 29.69469 median: 56.77597 mean:58.815258 std:18.875086 count: 1\n2021-08-16\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-08-16/2021-08-16\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n23.309488\nMininum2\n23.309488\nNonperc:100.0\nValues are\nmax: 119.581436 min: 23.309488 median: 58.88733 mean:64.39754 std:23.581223 count: 4\n2021-08-30\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-08-30/2021-08-30\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n26.204504\nMininum2\n26.204504\nNonperc:100.0\nValues are\nmax: 133.5377 min: 26.204504 median: 67.791 mean:70.7659 std:26.825619 count: 1\n2021-09-13\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-09-13/2021-09-13\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n22.125282\nMininum2\n22.125282\nNonperc:100.0\nValues are\nmax: 133.16002 min: 22.125282 median: 66.21553 mean:66.93244 std:22.943958 count: 2\n2021-09-27\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-09-27/2021-09-27\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n46.70356\nMininum2\n46.70356\nNonperc:100.0\nValues are\nmax: 195.00296 min: 46.70356 median: 87.359665 mean:98.04141 std:35.41679 count: 2\n2021-10-11\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-10-11/2021-10-11\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n58.99019\nMininum2\n58.99019\nNonperc:100.0\nValues are\nmax: 235.88766 min: 58.99019 median: 123.90407 mean:138.02087 std:47.40535 count: 4\n2021-10-25\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-10-25/2021-10-25\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n70.13526\nMininum2\n70.13526\nNonperc:100.0\nValues are\nmax: 243.94418 min: 70.13526 median: 130.99289 mean:139.18423 std:46.710598 count: 2\n2021-11-08\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-11-08/2021-11-08\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n70.347786\nMininum2\n70.347786\nNonperc:100.0\nValues are\nmax: 407.97516 min: 70.347786 median: 179.28476 mean:192.35605 std:83.09578 count: 2\n2021-11-22\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-11-22/2021-11-22\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n84.70897\nMininum2\n84.70897\nNonperc:100.0\nValues are\nmax: 348.62378 min: 84.70897 median: 189.1347 mean:197.42296 std:64.591576 count: 2\n2021-12-06\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-12-06/2021-12-06\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n71.25752\nMininum2\n71.25752\nNonperc:100.0\nValues are\nmax: 231.88707 min: 71.25752 median: 120.725136 mean:133.56406 std:43.10568 count: 1\n2021-12-20\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2021-12-20/2021-12-20\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n105.42862\nMininum2\n105.42862\nNonperc:100.0\nValues are\nmax: 476.5488 min: 105.42862 median: 213.26727 mean:234.87727 std:90.607124 count: 2\n2022-01-03\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2022-01-03/2022-01-03\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n47.09807\nMininum2\n47.09807\nNonperc:100.0\nValues are\nmax: 480.69498 min: 47.09807 median: 159.80124 mean:180.42455 std:95.81175 count: 2\n2022-01-17\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2022-01-17/2022-01-17\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n43.027798\nMininum2\n43.027798\nNonperc:100.0\nValues are\nmax: 319.04428 min: 43.027798 median: 123.168076 mean:143.78333 std:75.05291 count: 2\n2022-01-31\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2022-01-31/2022-01-31\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n74.65495\nMininum2\n74.65495\nNonperc:100.0\nValues are\nmax: 401.59836 min: 74.65495 median: 190.78067 mean:205.08435 std:83.507545 count: 1\n2022-02-14\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2022-02-14/2022-02-14\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n73.83858\nMininum2\n73.83858\nNonperc:100.0\nValues are\nmax: 300.54684 min: 73.83858 median: 135.56616 mean:153.86562 std:56.8119 count: 4\n2022-02-28\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2022-02-28/2022-02-28\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n46.574398\nMininum2\n46.574398\nNonperc:100.0\nValues are\nmax: 191.97519 min: 46.574398 median: 101.60213 mean:109.068596 std:39.277256 count: 2\n2022-03-14\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2022-03-14/2022-03-14\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\nnan\nMininum2\nnan\nNonperc:0.0\nValues are\nmax: nan min: nan median: nan mean:nan std:nan count: 1\nNaN conditions verified\n2022-03-28\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=76.986721,28.4148,77.44672100000001,28.8748&TIME=2022-03-28/2022-03-28\nDownloading patch (0, 0) ...\n"},{"name":"stderr","output_type":"stream","text":"/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:110: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:113: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:122: RuntimeWarning: Mean of empty slice\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:123: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:123: RuntimeWarning: All-NaN axis encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:124: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:124: RuntimeWarning: All-NaN axis encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/numpy/lib/nanfunctions.py:1665: RuntimeWarning: Degrees of freedom <= 0 for slice.\n  keepdims=keepdims)\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/numpy/lib/nanfunctions.py:1114: RuntimeWarning: All-NaN slice encountered\n  overwrite_input=overwrite_input)\n"},{"name":"stdout","output_type":"stream","text":"Merging patches ...\nDone!!!\nMininum\n65.54285\nMininum2\n65.5428...","hash":"c3000e343357807d0b145d16db5bb8c6","path":"/notebooks_test/build/c3000e343357807d0b145d16db5bb8c6.txt"},{"name":"stderr","output_type":"stream","text":"/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:110: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:113: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:122: RuntimeWarning: Mean of empty slice\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:123: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:123: RuntimeWarning: All-NaN axis encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:124: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:124: RuntimeWarning: All-NaN axis encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/numpy/lib/nanfunctions.py:1665: RuntimeWarning: Degrees of freedom <= 0 for slice.\n  keepdims=keepdims)\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/numpy/lib/nanfunctions.py:1114: RuntimeWarning: All-NaN slice encountered\n  overwrite_input=overwrite_input)\n"},{"name":"stdout","output_type":"stream","text":"Merging patches ...\nDone!!!\nMininum\n202.19516\nMininum2\n202.19516\nNonperc:100.0\nValues are\nmax: 420.78796 min: 202.19516 median: 325.46698 mean:313.02176 std:57.508636 count: 2\n2022-04-11\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=103.82756989258134,1.3011475955753282,103.91958039062821,1.379403761756964&TIME=2022-04-11/2022-04-11\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n99.108116\nMininum2\n99.108116\nNonperc:100.0\nValues are\nmax: 153.68611 min: 99.108116 median: 128.11809 mean:126.28805 std:15.559806 count: 1\n2022-04-25\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=103.82756989258134,1.3011475955753282,103.91958039062821,1.379403761756964&TIME=2022-04-25/2022-04-25\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n88.456215\nMininum2\n88.456215\nNonperc:100.0\nValues are\nmax: 164.96623 min: 88.456215 median: 146.49318 mean:138.70511 std:24.150076 count: 2\n2022-05-09\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=103.82756989258134,1.3011475955753282,103.91958039062821,1.379403761756964&TIME=2022-05-09/2022-05-09\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n116.29515\nMininum2\n116.29515\nNonperc:100.0\nValues are\nmax: 182.28593 min: 116.29515 median: 146.89368 mean:147.73604 std:13.64449 count: 1\n2022-05-23\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=103.82756989258134,1.3011475955753282,103.91958039062821,1.379403761756964&TIME=2022-05-23/2022-05-23\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n174.41402\nMininum2\n174.41402\nNonperc:100.0\nValues are\nmax: 253.2101 min: 174.41402 median: 219.27696 mean:217.21083 std:22.738483 count: 1\n2022-06-06\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=103.82756989258134,1.3011475955753282,103.91958039062821,1.379403761756964&TIME=2022-06-06/2022-06-06\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n170.38213\nMininum2\n170.38213\nNonperc:100.0\nValues are\nmax: 351.60687 min: 170.38213 median: 284.96487 mean:272.4828 std:44.673714 count: 1\n2022-06-20\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=103.82756989258134,1.3011475955753282,103.91958039062821,1.379403761756964&TIME=2022-06-20/2022-06-20\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n86.918785\nMininum2\n86.918785\nNonperc:100.0\nValues are\nmax: 120.56369 min: 86.918785 median: 103.98756 mean:104.75183 std:8.179694 count: 1\n2022-07-04\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=103.82756989258134,1.3011475955753282,103.91958039062821,1.379403761756964&TIME=2022-07-04/2022-07-04\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\nnan\nMininum2\nnan\nNonperc:0.0\nValues are\nmax: nan min: nan median: nan mean:nan std:nan count: 1\nNaN conditions verified\n###############################\nCity:Kuala Lumpur \n3.144667,101.683885\nPOLYGON((101.383885 2.8446670000000003,101.983885 2.8446670000000003,101.983885 3.444667,101.383885 3.444667,101.383885 2.8446670000000003))\nPOLYGON((101.62000458496415 3.1957726933844097,101.7381076123079 3.1957726933844097,101.7381076123079 3.080589254797187,101.62000458496415 3.080589254797187,101.62000458496415 3.1957726933844097))\nKualaLumpur\nstart 2021-01-04\nstop 2022-07-18\n2021-01-04\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-01-04/2021-01-04\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n107.42361\nMininum2\n107.42361\nNonperc:40.625\nValues are\nmax: 110.33543 min: 107.42361 median: 108.22212 mean:108.76061 std:1.3784205 count: 4\n2021-01-18\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-01-18/2021-01-18\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n25.04761\nMininum2\n25.04761\nNonperc:96.875\nValues are\nmax: 287.04205 min: 25.04761 median: 234.02666 mean:187.7453 std:87.11982 count: 2\n2021-02-01\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-02-01/2021-02-01\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n29.745615\nMininum2\n29.745615\nNonperc:100.0\nValues are\nmax: 109.002144 min: 29.745615 median: 61.579273 mean:65.010666 std:25.403574 count: 2\n2021-02-15\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-02-15/2021-02-15\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n52.838688\nMininum2\n52.838688\nNonperc:100.0\nValues are\nmax: 94.10245 min: 52.838688 median: 73.14788 mean:73.94246 std:11.634973 count: 2\n2021-03-01\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-03-01/2021-03-01\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n52.591618\nMininum2\n52.591618\nNonperc:100.0\nValues are\nmax: 151.89673 min: 52.591618 median: 105.25853 mean:101.06812 std:28.469301 count: 1\n2021-03-15\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-03-15/2021-03-15\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n36.840233\nMininum2\n36.840233\nNonperc:100.0\nValues are\nmax: 151.15747 min: 36.840233 median: 87.854675 mean:89.99598 std:28.100508 count: 1\n2021-03-29\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-03-29/2021-03-29\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n79.171104\nMininum2\n79.171104\nNonperc:100.0\nValues are\nmax: 121.661285 min: 79.171104 median: 97.34214 mean:96.00604 std:9.630999 count: 2\n2021-04-12\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-04-12/2021-04-12\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n45.28182\nMininum2\n45.28182\nNonperc:100.0\nValues are\nmax: 98.23495 min: 45.28182 median: 67.63486 mean:69.12213 std:12.51424 count: 2\n2021-04-26\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-04-26/2021-04-26\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n15.5921955\nMininum2\n15.5921955\nNonperc:92.1875\nValues are\nmax: 118.116425 min: 15.5921955 median: 27.991129 mean:34.95557 std:23.132294 count: 2\n2021-05-10\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-05-10/2021-05-10\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n69.63804\nMininum2\n69.63804\nNonperc:68.75\nValues are\nmax: 196.66632 min: 69.63804 median: 122.43982 mean:125.526344 std:43.036137 count: 9\n2021-05-24\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-05-24/2021-05-24\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n55.909164\nMininum2\n55.909164\nNonperc:100.0\nValues are\nmax: 113.56017 min: 55.909164 median: 83.7457 mean:84.06694 std:12.949512 count: 2\n2021-06-07\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-06-07/2021-06-07\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n71.24257\nMininum2\n71.24257\nNonperc:100.0\nValues are\nmax: 138.48642 min: 71.24257 median: 84.99397 mean:87.84773 std:14.125705 count: 2\n2021-06-21\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-06-21/2021-06-21\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n70.91033\nMininum2\n70.91033\nNonperc:100.0\nValues are\nmax: 99.65434 min: 70.91033 median: 90.68525 mean:88.700905 std:7.221938 count: 2\n2021-07-05\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-07-05/2021-07-05\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n37.04055\nMininum2\n37.04055\nNonperc:100.0\nValues are\nmax: 55.62585 min: 37.04055 median: 49.17169 mean:48.85602 std:4.3375053 count: 2\n2021-07-19\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-07-19/2021-07-19\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n42.35848\nMininum2\n42.35848\nNonperc:100.0\nValues are\nmax: 103.062325 min: 42.35848 median: 73.22456 mean:70.37344 std:16.978191 count: 2\n2021-08-02\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-08-02/2021-08-02\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n44.151398\nMininum2\n44.151398\nNonperc:100.0\nValues are\nmax: 89.570724 min: 44.151398 median: 64.8425 mean:65.23411 std:12.291703 count: 1\n2021-08-16\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-08-16/2021-08-16\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n52.14535\nMininum2\n52.14535\nNonperc:100.0\nValues are\nmax: 73.39484 min: 52.14535 median: 66.57752 mean:65.38441 std:5.0836186 count: 2\n2021-08-30\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-08-30/2021-08-30\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n89.0276\nMininum2\n89.0276\nNonperc:100.0\nValues are\nmax: 148.74408 min: 89.0276 median: 115.81131 mean:118.26785 std:15.775894 count: 1\n2021-09-13\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-09-13/2021-09-13\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n67.29121\nMininum2\n67.29121\nNonperc:100.0\nValues are\nmax: 104.557434 min: 67.29121 median: 87.76662 mean:88.11626 std:8.412843 count: 1\n2021-09-27\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-09-27/2021-09-27\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n91.05062\nMininum2\n91.05062\nNonperc:100.0\nValues are\nmax: 130.72609 min: 91.05062 median: 114.32511 mean:115.78905 std:9.229758 count: 2\n2021-10-11\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-10-11/2021-10-11\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n56.79423\nMininum2\n56.79423\nNonperc:100.0\nValues are\nmax: 84.24137 min: 56.79423 median: 75.71862 mean:72.59261 std:7.7115936 count: 2\n2021-10-25\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-10-25/2021-10-25\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n31.071726\nMininum2\n31.071726\nNonperc:100.0\nValues are\nmax: 68.98686 min: 31.071726 median: 44.144257 mean:45.62226 std:11.489136 count: 3\n2021-11-08\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-11-08/2021-11-08\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n54.955536\nMininum2\n54.955536\nNonperc:100.0\nValues are\nmax: 124.44159 min: 54.955536 median: 81.36206 mean:84.15871 std:19.541265 count: 4\n2021-11-22\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-11-22/2021-11-22\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n40.507336\nMininum2\n40.507336\nNonperc:100.0\nValues are\nmax: 97.31898 min: 40.507336 median: 61.916874 mean:63.24428 std:14.887559 count: 2\n2021-12-06\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-12-06/2021-12-06\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n29.954382\nMininum2\n29.954382\nNonperc:100.0\nValues are\nmax: 73.72421 min: 29.954382 median: 46.012 mean:47.158203 std:8.069592 count: 2\n2021-12-20\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2021-12-20/2021-12-20\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n42.05112\nMininum2\n42.05112\nNonperc:100.0\nValues are\nmax: 105.26958 min: 42.05112 median: 81.19989 mean:77.838104 std:16.829487 count: 2\n2022-01-03\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-01-03/2022-01-03\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n36.060596\nMininum2\n36.060596\nNonperc:100.0\nValues are\nmax: 101.66881 min: 36.060596 median: 73.762856 mean:74.67984 std:15.236603 count: 2\n2022-01-17\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-01-17/2022-01-17\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n56.08322\nMininum2\n56.08322\nNonperc:100.0\nValues are\nmax: 131.52707 min: 56.08322 median: 106.77748 mean:102.63922 std:19.479261 count: 2\n2022-01-31\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-01-31/2022-01-31\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n5.1288033\nMininum2\n5.1288033\nNonperc:43.75\nValues are\nmax: 28.109713 min: 5.1288033 median: 28.10971 mean:23.936693 std:7.375414 count: 1\n2022-02-14\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-02-14/2022-02-14\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n47.032204\nMininum2\n47.032204\nNonperc:100.0\nValues are\nmax: 149.46423 min: 47.032204 median: 88.765686 mean:90.587425 std:23.03313 count: 2\n2022-02-28\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-02-28/2022-02-28\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n44.709217\nMininum2\n44.709217\nNonperc:100.0\nValues are\nmax: 157.30666 min: 44.709217 median: 91.85651 mean:96.94435 std:29.526918 count: 1\n2022-03-14\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-03-14/2022-03-14\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\nnan\nMininum2\nnan\nNonperc:0.0\nValues are\nmax: nan min: nan median: nan mean:nan std:nan count: 1\nNaN conditions verified\n2022-03-28\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-03-28/2022-03-28\nDownloading patch (0, 0) ...\n"},{"name":"stderr","output_type":"stream","text":"/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:110: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:113: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:122: RuntimeWarning: Mean of empty slice\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:123: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:123: RuntimeWarning: All-NaN axis encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:124: RuntimeWarning: All-NaN slice encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/ipykernel_launcher.py:124: RuntimeWarning: All-NaN axis encountered\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/numpy/lib/nanfunctions.py:1665: RuntimeWarning: Degrees of freedom <= 0 for slice.\n  keepdims=keepdims)\n/home/conda/environments/no2ts-full/lib/python3.7/site-packages/numpy/lib/nanfunctions.py:1114: RuntimeWarning: All-NaN slice encountered\n  overwrite_input=overwrite_input)\n"},{"name":"stdout","output_type":"stream","text":"Merging patches ...\nDone!!!\nMininum\n43.779007\nMininum2\n43.779007\nNonperc:100.0\nValues are\nmax: 115.268684 min: 43.779007 median: 79.69932 mean:76.13042 std:18.467825 count: 2\n2022-04-11\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-04-11/2022-04-11\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n56.345142\nMininum2\n56.345142\nNonperc:100.0\nValues are\nmax: 144.61449 min: 56.345142 median: 121.37958 mean:116.36371 std:20.2999 count: 2\n2022-04-25\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-04-25/2022-04-25\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n39.50524\nMininum2\n39.50524\nNonperc:100.0\nValues are\nmax: 75.25635 min: 39.50524 median: 51.10364 mean:53.953938 std:10.260109 count: 2\n2022-05-09\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-05-09/2022-05-09\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n60.70747\nMininum2\n60.70747\nNonperc:100.0\nValues are\nmax: 94.64487 min: 60.70747 median: 76.66947 mean:77.422134 std:9.353252 count: 2\n2022-05-23\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-05-23/2022-05-23\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n84.886345\nMininum2\n84.886345\nNonperc:100.0\nValues are\nmax: 121.33477 min: 84.886345 median: 100.5372 mean:102.74614 std:9.421692 count: 2\n2022-06-06\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-06-06/2022-06-06\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n92.55558\nMininum2\n92.55558\nNonperc:100.0\nValues are\nmax: 137.7474 min: 92.55558 median: 111.19426 mean:113.94795 std:11.687698 count: 2\n2022-06-20\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-06-20/2022-06-20\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\n87.052185\nMininum2\n87.052185\nNonperc:100.0\nValues are\nmax: 123.76779 min: 87.052185 median: 98.20757 mean:100.93263 std:9.102009 count: 2\n2022-07-04\nhttps://services.sentinel-hub.com/ogc/wms/c1f84418-3731-4b42-b92b-737c47d327a6?version=1.1.1&service=WMS&request=GetMap&format=image/tiff;depth=32f&crs=EPSG:4326&layers=S5P-TW-WEEKLY-NEW&RESX=1627.315m&RESY=1627.315m&BBOX=101.62000458496415,3.080589254797187,101.7381076123079,3.1957726933844097&TIME=2022-07-04/2022-07-04\nDownloading patch (0, 0) ...\nMerging patches ...\nDone!!!\nMininum\nnan\nMininum2\nnan\nNonperc:0.0\nValues are\nmax: nan min: nan median: nan mean:nan std:nan count: 1\nNaN conditions verified\n"}],"key":"TAvB8wIWNT"}],"key":"xZjuusXCeY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now is time to play with results","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Idoyuz6pK1"}],"identifier":"now-is-time-to-play-with-results","label":"Now is time to play with results","html_id":"now-is-time-to-play-with-results","implicit":true,"key":"ptYU9rskBd"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"first try to figure out how the generated output is structured using the panda dataframe","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YNB4nWniCp"}],"key":"p7o3J47nR5"}],"key":"Fzrjpz679g"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#df = pd.read_csv(\"Outputs/N1_tri/20220708T032639/N1_trilateral_20220708T032639.csv\")\ndf = pd.read_csv(os.path.join(PARENT_DATASET_DIR,filename))\ndf","key":"iWwssIDY1b"},{"type":"output","id":"4xwcUNLo88CzuhSGaeSxl","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>AOI</th>\n      <th>Country</th>\n      <th>Region</th>\n      <th>City</th>\n      <th>Site Name</th>\n      <th>Description</th>\n      <th>Method</th>\n      <th>EO Sensor</th>\n      <th>Input Data</th>\n      <th>Indicator code</th>\n      <th>...</th>\n      <th>Reference value</th>\n      <th>Rule</th>\n      <th>Indicator Value</th>\n      <th>Sub-AOI</th>\n      <th>Y axis</th>\n      <th>Indicator Name</th>\n      <th>Color Code</th>\n      <th>Data Provider</th>\n      <th>AOI_ID</th>\n      <th>Update Frequency</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3.144667,101.683885</td>\n      <td>MY</td>\n      <td>NaN</td>\n      <td>Kuala Lumpur</td>\n      <td>NaN</td>\n      <td>Air Quality</td>\n      <td>Spatial average of NO2 bi-weekly concentration...</td>\n      <td>TROPOMI</td>\n      <td>Sentinel-5p Level-3 NO2</td>\n      <td>N1</td>\n      <td>...</td>\n      <td>[108.22212, 1.3784205, 110.33543, 107.42361, 4...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>POLYGON((101.62000458496415 3.1957726933844097...</td>\n      <td>Tropospheric NO2 (μmol/m2)</td>\n      <td>TROPOMI: Spatial average over the city area of...</td>\n      <td>NaN</td>\n      <td>EMSS</td>\n      <td>MY02</td>\n      <td>Bi-weekly</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>19.076,72.8777</td>\n      <td>IN</td>\n      <td>NaN</td>\n      <td>Mumbai</td>\n      <td>NaN</td>\n      <td>Air Quality</td>\n      <td>Spatial average of NO2 bi-weekly concentration...</td>\n      <td>TROPOMI</td>\n      <td>Sentinel-5p Level-3 NO2</td>\n      <td>N1</td>\n      <td>...</td>\n      <td>[93.74785, 48.226727, 259.41187, 32.426636, 10...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>POLYGON((72.57770000000001 18.776,73.1777 18.7...</td>\n      <td>Tropospheric NO2 (μmol/m2)</td>\n      <td>TROPOMI: Spatial average over the city area of...</td>\n      <td>NaN</td>\n      <td>EMSS</td>\n      <td>IN02</td>\n      <td>Bi-weekly</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>28.6448,77.216721</td>\n      <td>IN</td>\n      <td>NaN</td>\n      <td>New Delhi</td>\n      <td>NaN</td>\n      <td>Air Quality</td>\n      <td>Spatial average of NO2 bi-weekly concentration...</td>\n      <td>TROPOMI</td>\n      <td>Sentinel-5p Level-3 NO2</td>\n      <td>N1</td>\n      <td>...</td>\n      <td>[219.4182, 106.50223, 500.8177, 76.29955, 100.0]</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>POLYGON((76.986721 28.4148,77.44672100000001 2...</td>\n      <td>Tropospheric NO2 (μmol/m2)</td>\n      <td>TROPOMI: Spatial average over the city area of...</td>\n      <td>NaN</td>\n      <td>EMSS</td>\n      <td>IN01</td>\n      <td>Bi-weekly</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1.358235,103.812292</td>\n      <td>MY</td>\n      <td>NaN</td>\n      <td>Singapore</td>\n      <td>NaN</td>\n      <td>Air Quality</td>\n      <td>Spatial average of NO2 bi-weekly concentration...</td>\n      <td>TROPOMI</td>\n      <td>Sentinel-5p Level-3 NO2</td>\n      <td>N1</td>\n      <td>...</td>\n      <td>[68.74196, 12.760516, 79.525665, 33.348793, 70.0]</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>POLYGON((103.82756989258134 1.379403761756964,...</td>\n      <td>Tropospheric NO2 (μmol/m2)</td>\n      <td>TROPOMI: Spatial average over the city area of...</td>\n      <td>NaN</td>\n      <td>EMSS</td>\n      <td>MY01</td>\n      <td>Bi-weekly</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3.144667,101.683885</td>\n      <td>MY</td>\n      <td>NaN</td>\n      <td>Kuala Lumpur</td>\n      <td>NaN</td>\n      <td>Air Quality</td>\n      <td>Spatial average of NO2 bi-weekly concentration...</td>\n      <td>TROPOMI</td>\n      <td>Sentinel-5p Level-3 NO2</td>\n      <td>N1</td>\n      <td>...</td>\n      <td>[234.02666, 87.11982, 287.04205, 25.04761, 96....</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>POLYGON((101.62000458496415 3.1957726933844097...</td>\n      <td>Tropospheric NO2 (μmol/m2)</td>\n      <td>TROPOMI: Spatial average over the city area of...</td>\n      <td>NaN</td>\n      <td>EMSS</td>\n      <td>MY02</td>\n      <td>Bi-weekly</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>155</th>\n      <td>1.358235,103.812292</td>\n      <td>MY</td>\n      <td>NaN</td>\n      <td>Singapore</td>\n      <td>NaN</td>\n      <td>Air Quality</td>\n      <td>Spatial average of NO2 bi-weekly concentration...</td>\n      <td>TROPOMI</td>\n      <td>Sentinel-5p Level-3 NO2</td>\n      <td>N1</td>\n      <td>...</td>\n      <td>[103.98756, 8.179694, 120.56369, 86.918785, 10...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>POLYGON((103.82756989258134 1.379403761756964,...</td>\n      <td>Tropospheric NO2 (μmol/m2)</td>\n      <td>TROPOMI: Spatial average over the city area of...</td>\n      <td>NaN</td>\n      <td>EMSS</td>\n      <td>MY01</td>\n      <td>Bi-weekly</td>\n    </tr>\n    <tr>\n      <th>156</th>\n      <td>3.144667,101.683885</td>\n      <td>MY</td>\n      <td>NaN</td>\n      <td>Kuala Lumpur</td>\n      <td>NaN</td>\n      <td>Air Quality</td>\n      <td>Spatial average of NO2 bi-weekly concentration...</td>\n      <td>TROPOMI</td>\n      <td>Sentinel-5p Level-3 NO2</td>\n      <td>N1</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>POLYGON((101.62000458496415 3.1957726933844097...</td>\n      <td>Tropospheric NO2 (μmol/m2)</td>\n      <td>TROPOMI: Spatial average over the city area of...</td>\n      <td>NaN</td>\n      <td>EMSS</td>\n      <td>MY02</td>\n      <td>Bi-weekly</td>\n    </tr>\n    <tr>\n      <th>157</th>\n      <td>19.076,72.8777</td>\n      <td>IN</td>\n      <td>NaN</td>\n      <td>Mumbai</td>\n      <td>NaN</td>\n      <td>Air Quality</td>\n      <td>Spatial average of NO2 bi-weekly concentration...</td>\n      <td>TROPOMI</td>\n      <td>Sentinel-5p Level-3 NO2</td>\n      <td>N1</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>POLYGON((72.57770000000001 18.776,73.1777 18.7...</td>\n      <td>Tropospheric NO2 (μmol/m2)</td>\n      <td>TROPOMI: Spatial average over the city area of...</td>\n      <td>NaN</td>\n      <td>EMSS</td>\n      <td>IN02</td>\n      <td>Bi-weekly</td>\n    </tr>\n    <tr>\n      <th>158</th>\n      <td>28.6448,77.216721</td>\n      <td>IN</td>\n      <td>NaN</td>\n      <td>New Delhi</td>\n      <td>NaN</td>\n      <td>Air Quality</td>\n      <td>Spatial average of NO2 bi-weekly concentration...</td>\n      <td>TROPOMI</td>\n      <td>Sentinel-5p Level-3 NO2</td>\n      <td>N1</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>POLYGON((76.986721 28.4148,77.44672100000001 2...</td>\n      <td>Tropospheric NO2 (μmol/m2)</td>\n      <td>TROPOMI: Spatial average over the city area of...</td>\n      <td>NaN</td>\n      <td>EMSS</td>\n      <td>IN01</td>\n      <td>Bi-weekly</td>\n    </tr>\n    <tr>\n      <th>159</th>\n      <td>1.358235,103.812292</td>\n      <td>MY</td>\n      <td>NaN</td>\n      <td>Singapore</td>\n      <td>NaN</td>\n      <td>Air Quality</td>\n      <td>Spatial average of NO2 bi-weekly concentration...</td>\n      <td>TROPOMI</td>\n      <td>Sentinel-5p Level-3 NO2</td>\n      <td>N1</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>POLYGON((103.82756989258134 1.379403761756964,...</td>\n      <td>Tropospheric NO2 (μmol/m2)</td>\n      <td>TROPOMI: Spatial average over the city area of...</td>\n      <td>NaN</td>\n      <td>EMSS</td>\n      <td>MY01</td>\n      <td>Bi-weekly</td>\n    </tr>\n  </tbody>\n</table>\n<p>160 rows × 24 columns</p>\n</div>","content_type":"text/html"},"text/plain":{"content":"                     AOI Country  Region           City  Site Name  \\\n0    3.144667,101.683885    MY       NaN  Kuala Lumpur         NaN   \n1         19.076,72.8777      IN     NaN         Mumbai        NaN   \n2      28.6448,77.216721      IN     NaN      New Delhi        NaN   \n3    1.358235,103.812292    MY       NaN      Singapore        NaN   \n4    3.144667,101.683885    MY       NaN  Kuala Lumpur         NaN   \n..                   ...     ...     ...            ...        ...   \n155  1.358235,103.812292    MY       NaN      Singapore        NaN   \n156  3.144667,101.683885    MY       NaN  Kuala Lumpur         NaN   \n157       19.076,72.8777      IN     NaN         Mumbai        NaN   \n158    28.6448,77.216721      IN     NaN      New Delhi        NaN   \n159  1.358235,103.812292    MY       NaN      Singapore        NaN   \n\n     Description                                             Method EO Sensor  \\\n0    Air Quality  Spatial average of NO2 bi-weekly concentration...   TROPOMI   \n1    Air Quality  Spatial average of NO2 bi-weekly concentration...   TROPOMI   \n2    Air Quality  Spatial average of NO2 bi-weekly concentration...   TROPOMI   \n3    Air Quality  Spatial average of NO2 bi-weekly concentration...   TROPOMI   \n4    Air Quality  Spatial average of NO2 bi-weekly concentration...   TROPOMI   \n..           ...                                                ...       ...   \n155  Air Quality  Spatial average of NO2 bi-weekly concentration...   TROPOMI   \n156  Air Quality  Spatial average of NO2 bi-weekly concentration...   TROPOMI   \n157  Air Quality  Spatial average of NO2 bi-weekly concentration...   TROPOMI   \n158  Air Quality  Spatial average of NO2 bi-weekly concentration...   TROPOMI   \n159  Air Quality  Spatial average of NO2 bi-weekly concentration...   TROPOMI   \n\n                  Input Data Indicator code  ...  \\\n0    Sentinel-5p Level-3 NO2             N1  ...   \n1    Sentinel-5p Level-3 NO2             N1  ...   \n2    Sentinel-5p Level-3 NO2             N1  ...   \n3    Sentinel-5p Level-3 NO2             N1  ...   \n4    Sentinel-5p Level-3 NO2             N1  ...   \n..                       ...            ...  ...   \n155  Sentinel-5p Level-3 NO2             N1  ...   \n156  Sentinel-5p Level-3 NO2             N1  ...   \n157  Sentinel-5p Level-3 NO2             N1  ...   \n158  Sentinel-5p Level-3 NO2             N1  ...   \n159  Sentinel-5p Level-3 NO2             N1  ...   \n\n                                       Reference value  Rule Indicator Value  \\\n0    [108.22212, 1.3784205, 110.33543, 107.42361, 4...   NaN             NaN   \n1    [93.74785, 48.226727, 259.41187, 32.426636, 10...   NaN             NaN   \n2     [219.4182, 106.50223, 500.8177, 76.29955, 100.0]   NaN             NaN   \n3    [68.74196, 12.760516, 79.525665, 33.348793, 70.0]   NaN             NaN   \n4    [234.02666, 87.11982, 287.04205, 25.04761, 96....   NaN             NaN   \n..                                                 ...   ...             ...   \n155  [103.98756, 8.179694, 120.56369, 86.918785, 10...   NaN             NaN   \n156                                                NaN   NaN             NaN   \n157                                                NaN   NaN             NaN   \n158                                                NaN   NaN             NaN   \n159                                                NaN   NaN             NaN   \n\n                                               Sub-AOI  \\\n0    POLYGON((101.62000458496415 3.1957726933844097...   \n1    POLYGON((72.57770000000001 18.776,73.1777 18.7...   \n2    POLYGON((76.986721 28.4148,77.44672100000001 2...   \n3    POLYGON((103.82756989258134 1.379403761756964,...   \n4    POLYGON((101.62000458496415 3.1957726933844097...   \n..                                                 ...   \n155  POLYGON((103.82756989258134 1.379403761756964,...   \n156  POLYGON((101.62000458496415 3.1957726933844097...   \n157  POLYGON((72.57770000000001 18.776,73.1777 18.7...   \n158  POLYGON((76.986721 28.4148,77.44672100000001 2...   \n159  POLYGON((103.82756989258134 1.379403761756964,...   \n\n                         Y axis  \\\n0    Tropospheric NO2 (μmol/m2)   \n1    Tropospheric NO2 (μmol/m2)   \n2    Tropospheric NO2 (μmol/m2)   \n3    Tropospheric NO2 (μmol/m2)   \n4    Tropospheric NO2 (μmol/m2)   \n..                          ...   \n155  Tropospheric NO2 (μmol/m2)   \n156  Tropospheric NO2 (μmol/m2)   \n157  Tropospheric NO2 (μmol/m2)   \n158  Tropospheric NO2 (μmol/m2)   \n159  Tropospheric NO2 (μmol/m2)   \n\n                                        Indicator Name  Color Code  \\\n0    TROPOMI: Spatial average over the city area of...         NaN   \n1    TROPOMI: Spatial average over the city area of...         NaN   \n2    TROPOMI: Spatial average over the city area of...         NaN   \n3    TROPOMI: Spatial average over the city area of...         NaN   \n4    TROPOMI: Spatial average over the city area of...         NaN   \n..                                                 ...         ...   \n155  TROPOMI: Spatial average over the city area of...         NaN   \n156  TROPOMI: Spatial average over the city area of...         NaN   \n157  TROPOMI: Spatial average over the city area of...         NaN   \n158  TROPOMI: Spatial average over the city area of...         NaN   \n159  TROPOMI: Spatial average over the city area of...         NaN   \n\n    Data Provider AOI_ID Update Frequency  \n0            EMSS   MY02        Bi-weekly  \n1            EMSS   IN02        Bi-weekly  \n2            EMSS   IN01        Bi-weekly  \n3            EMSS   MY01        Bi-weekly  \n4            EMSS   MY02        Bi-weekly  \n..            ...    ...              ...  \n155          EMSS   MY01        Bi-weekly  \n156          EMSS   MY02        Bi-weekly  \n157          EMSS   IN02        Bi-weekly  \n158          EMSS   IN01        Bi-weekly  \n159          EMSS   MY01        Bi-weekly  \n\n[160 rows x 24 columns]","content_type":"text/plain"}}}],"key":"n0voWi0hp0"}],"key":"M1ufviqYjo"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"And now that we understand how the data is structured we can print the time series for selected fields and cities","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LvNfLdVV3W"}],"key":"AVK7cl0mto"}],"key":"dfGWsyjgUc"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#df = pd.read_csv(\"Outputs/N1_tri/20220708T032639/N1_trilateral_20220708T032639.csv\", usecols=(3,10,11))\ndf = pd.read_csv(os.path.join(PARENT_DATASET_DIR,filename), usecols=(3,10,11))\ndf","key":"S10CDaWMik"},{"type":"output","id":"O2dLoVpSLkfqNjjf-GFmc","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>City</th>\n      <th>Time</th>\n      <th>Measurement Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-01-04T00:00:00</td>\n      <td>108.76061</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Mumbai</td>\n      <td>2021-01-04T00:00:00</td>\n      <td>105.62983</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>New Delhi</td>\n      <td>2021-01-04T00:00:00</td>\n      <td>238.19249</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Singapore</td>\n      <td>2021-01-04T00:00:00</td>\n      <td>67.86284</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-01-18T00:00:00</td>\n      <td>187.74530</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>155</th>\n      <td>Singapore</td>\n      <td>2022-06-20T00:00:00</td>\n      <td>104.75183</td>\n    </tr>\n    <tr>\n      <th>156</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-07-04T00:00:00</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>157</th>\n      <td>Mumbai</td>\n      <td>2022-07-04T00:00:00</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>158</th>\n      <td>New Delhi</td>\n      <td>2022-07-04T00:00:00</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>159</th>\n      <td>Singapore</td>\n      <td>2022-07-04T00:00:00</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>160 rows × 3 columns</p>\n</div>","content_type":"text/html"},"text/plain":{"content":"              City                 Time  Measurement Value\n0    Kuala Lumpur   2021-01-04T00:00:00          108.76061\n1           Mumbai  2021-01-04T00:00:00          105.62983\n2        New Delhi  2021-01-04T00:00:00          238.19249\n3        Singapore  2021-01-04T00:00:00           67.86284\n4    Kuala Lumpur   2021-01-18T00:00:00          187.74530\n..             ...                  ...                ...\n155      Singapore  2022-06-20T00:00:00          104.75183\n156  Kuala Lumpur   2022-07-04T00:00:00                NaN\n157         Mumbai  2022-07-04T00:00:00                NaN\n158      New Delhi  2022-07-04T00:00:00                NaN\n159      Singapore  2022-07-04T00:00:00                NaN\n\n[160 rows x 3 columns]","content_type":"text/plain"}}}],"key":"GBBrjDAiND"}],"key":"Gu0jb8g1Ex"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"#plt.rcParams[\"figure.figsize\"] = [7.00, 3.50]\n#plt.rcParams[\"figure.autolayout\"] = True\ndf_filtered = df.loc[df['City'] == 'Kuala Lumpur ']\ndf_filtered","key":"gH791yue9Z"},{"type":"output","id":"GUCFqG2hOOuXewtMLwTRP","data":[{"output_type":"execute_result","execution_count":14,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>City</th>\n      <th>Time</th>\n      <th>Measurement Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-01-04T00:00:00</td>\n      <td>108.760610</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-01-18T00:00:00</td>\n      <td>187.745300</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-02-01T00:00:00</td>\n      <td>65.010666</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-02-15T00:00:00</td>\n      <td>73.942460</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-03-01T00:00:00</td>\n      <td>101.068120</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-03-15T00:00:00</td>\n      <td>89.995980</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-03-29T00:00:00</td>\n      <td>96.006040</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-04-12T00:00:00</td>\n      <td>69.122130</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-04-26T00:00:00</td>\n      <td>34.955570</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-05-10T00:00:00</td>\n      <td>125.526344</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-05-24T00:00:00</td>\n      <td>84.066940</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-06-07T00:00:00</td>\n      <td>87.847730</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-06-21T00:00:00</td>\n      <td>88.700905</td>\n    </tr>\n    <tr>\n      <th>52</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-07-05T00:00:00</td>\n      <td>48.856020</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-07-19T00:00:00</td>\n      <td>70.373440</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-08-02T00:00:00</td>\n      <td>65.234110</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-08-16T00:00:00</td>\n      <td>65.384410</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-08-30T00:00:00</td>\n      <td>118.267850</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-09-13T00:00:00</td>\n      <td>88.116260</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-09-27T00:00:00</td>\n      <td>115.789050</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-10-11T00:00:00</td>\n      <td>72.592610</td>\n    </tr>\n    <tr>\n      <th>84</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-10-25T00:00:00</td>\n      <td>45.622260</td>\n    </tr>\n    <tr>\n      <th>88</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-11-08T00:00:00</td>\n      <td>84.158710</td>\n    </tr>\n    <tr>\n      <th>92</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-11-22T00:00:00</td>\n      <td>63.244280</td>\n    </tr>\n    <tr>\n      <th>96</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-12-06T00:00:00</td>\n      <td>47.158203</td>\n    </tr>\n    <tr>\n      <th>100</th>\n      <td>Kuala Lumpur</td>\n      <td>2021-12-20T00:00:00</td>\n      <td>77.838104</td>\n    </tr>\n    <tr>\n      <th>104</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-01-03T00:00:00</td>\n      <td>74.679840</td>\n    </tr>\n    <tr>\n      <th>108</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-01-17T00:00:00</td>\n      <td>102.639220</td>\n    </tr>\n    <tr>\n      <th>112</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-01-31T00:00:00</td>\n      <td>23.936693</td>\n    </tr>\n    <tr>\n      <th>116</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-02-14T00:00:00</td>\n      <td>90.587425</td>\n    </tr>\n    <tr>\n      <th>120</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-02-28T00:00:00</td>\n      <td>96.944350</td>\n    </tr>\n    <tr>\n      <th>124</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-03-14T00:00:00</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>128</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-03-28T00:00:00</td>\n      <td>76.130420</td>\n    </tr>\n    <tr>\n      <th>132</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-04-11T00:00:00</td>\n      <td>116.363710</td>\n    </tr>\n    <tr>\n      <th>136</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-04-25T00:00:00</td>\n      <td>53.953938</td>\n    </tr>\n    <tr>\n      <th>140</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-05-09T00:00:00</td>\n      <td>77.422134</td>\n    </tr>\n    <tr>\n      <th>144</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-05-23T00:00:00</td>\n      <td>102.746140</td>\n    </tr>\n    <tr>\n      <th>148</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-06-06T00:00:00</td>\n      <td>113.947950</td>\n    </tr>\n    <tr>\n      <th>152</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-06-20T00:00:00</td>\n      <td>100.932630</td>\n    </tr>\n    <tr>\n      <th>156</th>\n      <td>Kuala Lumpur</td>\n      <td>2022-07-04T00:00:00</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"              City                 Time  Measurement Value\n0    Kuala Lumpur   2021-01-04T00:00:00         108.760610\n4    Kuala Lumpur   2021-01-18T00:00:00         187.745300\n8    Kuala Lumpur   2021-02-01T00:00:00          65.010666\n12   Kuala Lumpur   2021-02-15T00:00:00          73.942460\n16   Kuala Lumpur   2021-03-01T00:00:00         101.068120\n20   Kuala Lumpur   2021-03-15T00:00:00          89.995980\n24   Kuala Lumpur   2021-03-29T00:00:00          96.006040\n28   Kuala Lumpur   2021-04-12T00:00:00          69.122130\n32   Kuala Lumpur   2021-04-26T00:00:00          34.955570\n36   Kuala Lumpur   2021-05-10T00:00:00         125.526344\n40   Kuala Lumpur   2021-05-24T00:00:00          84.066940\n44   Kuala Lumpur   2021-06-07T00:00:00          87.847730\n48   Kuala Lumpur   2021-06-21T00:00:00          88.700905\n52   Kuala Lumpur   2021-07-05T00:00:00          48.856020\n56   Kuala Lumpur   2021-07-19T00:00:00          70.373440\n60   Kuala Lumpur   2021-08-02T00:00:00          65.234110\n64   Kuala Lumpur   2021-08-16T00:00:00          65.384410\n68   Kuala Lumpur   2021-08-30T00:00:00         118.267850\n72   Kuala Lumpur   2021-09-13T00:00:00          88.116260\n76   Kuala Lumpur   2021-09-27T00:00:00         115.789050\n80   Kuala Lumpur   2021-10-11T00:00:00          72.592610\n84   Kuala Lumpur   2021-10-25T00:00:00          45.622260\n88   Kuala Lumpur   2021-11-08T00:00:00          84.158710\n92   Kuala Lumpur   2021-11-22T00:00:00          63.244280\n96   Kuala Lumpur   2021-12-06T00:00:00          47.158203\n100  Kuala Lumpur   2021-12-20T00:00:00          77.838104\n104  Kuala Lumpur   2022-01-03T00:00:00          74.679840\n108  Kuala Lumpur   2022-01-17T00:00:00         102.639220\n112  Kuala Lumpur   2022-01-31T00:00:00          23.936693\n116  Kuala Lumpur   2022-02-14T00:00:00          90.587425\n120  Kuala Lumpur   2022-02-28T00:00:00          96.944350\n124  Kuala Lumpur   2022-03-14T00:00:00                NaN\n128  Kuala Lumpur   2022-03-28T00:00:00          76.130420\n132  Kuala Lumpur   2022-04-11T00:00:00         116.363710\n136  Kuala Lumpur   2022-04-25T00:00:00          53.953938\n140  Kuala Lumpur   2022-05-09T00:00:00          77.422134\n144  Kuala Lumpur   2022-05-23T00:00:00         102.746140\n148  Kuala Lumpur   2022-06-06T00:00:00         113.947950\n152  Kuala Lumpur   2022-06-20T00:00:00         100.932630\n156  Kuala Lumpur   2022-07-04T00:00:00                NaN","content_type":"text/plain"}}}],"key":"qgWAS4YUCO"}],"key":"jdZ0F5Z5j9"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(20,10))\nplt.title('Mean of NO2 timeseries data')\nfig.autofmt_xdate()\nplt.plot(df_filtered[\"Time\"], df_filtered[\"Measurement Value\"])\nplt.show()","key":"g26dyvhW1C"},{"type":"output","id":"Rq3W8uk1cycbfPWlZu6hD","data":[{"output_type":"display_data","metadata":{"needs_background":"light"},"data":{"image/png":{"content_type":"image/png","hash":"50fcbd80778ce752be42459d74d45c9b","path":"/notebooks_test/build/50fcbd80778ce752be42459d74d45c9b.png"},"text/plain":{"content":"<Figure size 1440x720 with 1 Axes>","content_type":"text/plain"}}}],"key":"P5jTafdOv1"}],"key":"rbHG9ao1Po"}],"key":"UghocSdpIT"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Lockdown in Venice","url":"/external-notebooks/eurodatacube/notebooks/notebooks/contributions/igarss2022/igarss-22-nasa-api-lockdown-in-venice","group":"Contributions"},"next":{"title":"Time series using STAC API statistics endpoints","url":"/external-notebooks/eurodatacube/notebooks/notebooks/contributions/igarss2022/igarss-22-timeseries-stac-api-single-vs-multi","group":"Contributions"}}},"domain":"http://localhost:3000"}